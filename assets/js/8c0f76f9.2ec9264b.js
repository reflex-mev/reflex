"use strict";(self.webpackChunkreflex_docs=self.webpackChunkreflex_docs||[]).push([[8498],{1510:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>c});var r=n(4848),t=n(8453);const s={sidebar_position:1},l="Architecture Overview",a={id:"technical/architecture/overview",title:"Architecture Overview",description:"Understanding Reflex Protocol's architecture is key to building effective MEV capture strategies. This document provides a comprehensive overview of the system design, components, and data flow.",source:"@site/docs/technical/architecture/overview.md",sourceDirName:"technical/architecture",slug:"/technical/architecture/overview",permalink:"/reflex/technical/architecture/overview",draft:!1,unlisted:!1,editUrl:"https://github.com/reflex-mev/reflex/tree/main/website/docs/technical/architecture/overview.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Overview",permalink:"/reflex/"},next:{title:"Integration Overview",permalink:"/reflex/technical/integration/overview"}},o={},c=[{value:"\ud83c\udfd7\ufe0f High-Level Architecture",id:"\ufe0f-high-level-architecture",level:2},{value:"\ud83e\udde9 Core Components",id:"-core-components",level:2},{value:"1. Reflex Router",id:"1-reflex-router",level:3},{value:"2. Reflex Quoter",id:"2-reflex-quoter",level:3},{value:"3. DEX Plugins",id:"3-dex-plugins",level:3},{value:"4. Revenue Distributor",id:"4-revenue-distributor",level:3},{value:"\ud83d\udd04 Transaction Flow",id:"-transaction-flow",level:2},{value:"Standard Backrun Flow",id:"standard-backrun-flow",level:3},{value:"Batched Execution Flow",id:"batched-execution-flow",level:3},{value:"\ud83d\udca1 MEV Capture Strategies",id:"-mev-capture-strategies",level:2},{value:"1. Sandwich Attack Prevention",id:"1-sandwich-attack-prevention",level:3},{value:"2. Arbitrage Opportunities",id:"2-arbitrage-opportunities",level:3},{value:"3. Just-In-Time Liquidity",id:"3-just-in-time-liquidity",level:3},{value:"\ud83d\udd27 Gas Optimization",id:"-gas-optimization",level:2},{value:"Flash Loan Efficiency",id:"flash-loan-efficiency",level:3},{value:"Gas Usage Breakdown",id:"gas-usage-breakdown",level:3},{value:"\ud83d\udee1\ufe0f Security Architecture",id:"\ufe0f-security-architecture",level:2},{value:"Multi-Layer Security",id:"multi-layer-security",level:3},{value:"Risk Mitigation",id:"risk-mitigation",level:3},{value:"\ud83d\udcca Performance Characteristics",id:"-performance-characteristics",level:2},{value:"Throughput",id:"throughput",level:3},{value:"Latency",id:"latency",level:3},{value:"Scalability",id:"scalability",level:3},{value:"\ud83c\udf10 Multi-Chain Architecture",id:"-multi-chain-architecture",level:2},{value:"Chain-Agnostic Design",id:"chain-agnostic-design",level:3},{value:"Network-Specific Optimizations",id:"network-specific-optimizations",level:3},{value:"\ud83d\udd2e Future Enhancements",id:"-future-enhancements",level:2},{value:"Planned Features",id:"planned-features",level:3},{value:"Research Areas",id:"research-areas",level:3}];function d(e){const i={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.header,{children:(0,r.jsx)(i.h1,{id:"architecture-overview",children:"Architecture Overview"})}),"\n",(0,r.jsx)(i.p,{children:"Understanding Reflex Protocol's architecture is key to building effective MEV capture strategies. This document provides a comprehensive overview of the system design, components, and data flow."}),"\n",(0,r.jsx)(i.h2,{id:"\ufe0f-high-level-architecture",children:"\ud83c\udfd7\ufe0f High-Level Architecture"}),"\n",(0,r.jsx)(i.p,{children:"Reflex Protocol consists of several interconnected components that work together to capture and distribute MEV:"}),"\n",(0,r.jsx)(i.mermaid,{value:'graph TB\n    User[\ud83d\udc64 User Transaction] --\x3e DEX[\ud83c\udfea DEX Pool]\n    DEX --\x3e Plugin[\ud83d\udd0c Reflex Plugin]\n    Plugin --\x3e Router[\ud83c\udfaf Reflex Router]\n    Router --\x3e Quoter[\ud83d\udca1 Reflex Quoter]\n    Quoter --\x3e |Price Analysis| Router\n    Router --\x3e Executor[\u26a1 Swap Executor]\n    Executor --\x3e |Flash Loan| DEX\n    Executor --\x3e Distributor[\ud83d\udcb0 Revenue Distributor]\n    Distributor --\x3e Protocol[\ud83c\udfdb\ufe0f Protocol Share]\n    Distributor --\x3e UserReward[\ud83c\udf81 User Rewards]\n    Distributor --\x3e Validator[\u26cf\ufe0f Validator Tips]\n\n    subgraph "Off-Chain"\n        Monitor[\ud83d\udc41\ufe0f Event Monitor]\n        Analytics[\ud83d\udcca Analytics Engine]\n    end\n\n    Plugin --\x3e Monitor\n    Monitor --\x3e Analytics'}),"\n",(0,r.jsx)(i.h2,{id:"-core-components",children:"\ud83e\udde9 Core Components"}),"\n",(0,r.jsx)(i.h3,{id:"1-reflex-router",children:"1. Reflex Router"}),"\n",(0,r.jsx)(i.p,{children:"The central orchestrator that coordinates all MEV capture activities."}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.strong,{children:"Key Responsibilities:"})}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Receives backrun triggers from plugins"}),"\n",(0,r.jsx)(i.li,{children:"Coordinates with the quoter for profitability analysis"}),"\n",(0,r.jsx)(i.li,{children:"Executes arbitrage trades through flash loans"}),"\n",(0,r.jsx)(i.li,{children:"Manages revenue distribution"}),"\n"]}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.strong,{children:"Core Functions:"})}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-solidity",children:"function triggerBackrun(\n    bytes32 triggerPoolId,\n    uint112 swapAmountIn,\n    bool token0In,\n    address recipient,\n    bytes32 configId\n) external returns (uint256 profit, address profitToken);\n"})}),"\n",(0,r.jsx)(i.h3,{id:"2-reflex-quoter",children:"2. Reflex Quoter"}),"\n",(0,r.jsx)(i.p,{children:"The pricing engine that determines arbitrage opportunities and optimal execution paths."}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.strong,{children:"Key Responsibilities:"})}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Analyzes price differences across DEX pools"}),"\n",(0,r.jsx)(i.li,{children:"Calculates optimal arbitrage routes"}),"\n",(0,r.jsx)(i.li,{children:"Estimates gas costs and profitability"}),"\n",(0,r.jsx)(i.li,{children:"Provides execution parameters"}),"\n"]}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.strong,{children:"Analysis Process:"})}),"\n",(0,r.jsx)(i.mermaid,{value:"graph LR\n    Input[\ud83c\udfaf Trigger Pool] --\x3e Analysis[\ud83d\udcca Price Analysis]\n    Analysis --\x3e Routes[\ud83d\udee3\ufe0f Route Discovery]\n    Routes --\x3e Profitability[\ud83d\udcb0 Profit Calculation]\n    Profitability --\x3e Execution[\u26a1 Execution Plan]"}),"\n",(0,r.jsx)(i.h3,{id:"3-dex-plugins",children:"3. DEX Plugins"}),"\n",(0,r.jsx)(i.p,{children:"Lightweight contracts that integrate with existing DEX protocols."}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.strong,{children:"Key Responsibilities:"})}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Monitor swap events in real-time"}),"\n",(0,r.jsx)(i.li,{children:"Trigger backrun opportunities"}),"\n",(0,r.jsx)(i.li,{children:"Implement protocol-specific logic"}),"\n",(0,r.jsx)(i.li,{children:"Handle callback mechanisms"}),"\n"]}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.strong,{children:"Plugin Types:"})}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"UniswapV2Plugin"}),": For UniswapV2-style AMMs"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"UniswapV3Plugin"}),": For concentrated liquidity pools"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"CurvePlugin"}),": For stable coin pools"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"CustomPlugin"}),": For proprietary AMMs"]}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"4-revenue-distributor",children:"4. Revenue Distributor"}),"\n",(0,r.jsx)(i.p,{children:"Manages the fair distribution of captured MEV across stakeholders."}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.strong,{children:"Key Responsibilities:"})}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Configurable profit sharing"}),"\n",(0,r.jsx)(i.li,{children:"Multi-recipient distributions"}),"\n",(0,r.jsx)(i.li,{children:"Dust handling"}),"\n",(0,r.jsx)(i.li,{children:"Event emission for transparency"}),"\n"]}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.strong,{children:"Distribution Models:"})}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Fixed Percentage"}),": Static allocation percentages"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Dynamic Sharing"}),": Allocation based on contribution"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Tiered System"}),": Different rates for different users"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Time-based"}),": Rewards that change over time"]}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"-transaction-flow",children:"\ud83d\udd04 Transaction Flow"}),"\n",(0,r.jsx)(i.h3,{id:"standard-backrun-flow",children:"Standard Backrun Flow"}),"\n",(0,r.jsx)(i.mermaid,{value:"sequenceDiagram\n    participant User\n    participant DEX as DEX Pool\n    participant Plugin as Reflex Plugin\n    participant Router as Reflex Router\n    participant Quoter as Reflex Quoter\n    participant Distributor as Revenue Distributor\n\n    User->>DEX: Execute Swap\n    DEX->>Plugin: afterSwap() callback\n    Plugin->>Router: triggerBackrun()\n    Router->>Quoter: getQuote()\n    Quoter--\x3e>Router: profit estimate + route\n\n    alt Profitable Opportunity\n        Router->>DEX: Execute flash loan\n        DEX->>Router: Flash loan callback\n        Router->>Router: Execute arbitrage route\n        Router->>DEX: Repay flash loan\n        Router->>Distributor: Distribute profits\n        Distributor->>User: User share\n        Distributor->>Plugin: Protocol share\n    else Not Profitable\n        Router--\x3e>Plugin: No action taken\n    end"}),"\n",(0,r.jsx)(i.h3,{id:"batched-execution-flow",children:"Batched Execution Flow"}),"\n",(0,r.jsx)(i.mermaid,{value:"sequenceDiagram\n    participant Aggregator\n    participant Router as Reflex Router\n    participant DEX1 as DEX Pool 1\n    participant DEX2 as DEX Pool 2\n    participant DEX3 as DEX Pool 3\n\n    Aggregator->>Router: backrunedExecute()\n    Router->>Router: Execute target transaction\n\n    par Parallel Backruns\n        Router->>DEX1: Attempt backrun 1\n        Router->>DEX2: Attempt backrun 2\n        Router->>DEX3: Attempt backrun 3\n    end\n\n    Router--\x3e>Aggregator: Results + profits"}),"\n",(0,r.jsx)(i.h2,{id:"-mev-capture-strategies",children:"\ud83d\udca1 MEV Capture Strategies"}),"\n",(0,r.jsx)(i.h3,{id:"1-sandwich-attack-prevention",children:"1. Sandwich Attack Prevention"}),"\n",(0,r.jsx)(i.p,{children:"Transform harmful sandwich attacks into beneficial backruns:"}),"\n",(0,r.jsx)(i.mermaid,{value:"graph LR\n    BadMEV[\ud83d\ude08 Sandwich Attack] --\x3e Detection[\ud83d\udd0d Detection]\n    Detection --\x3e Mitigation[\ud83d\udee1\ufe0f Mitigation]\n    Mitigation --\x3e GoodMEV[\ud83d\ude07 User Backrun]\n    GoodMEV --\x3e Reward[\ud83c\udf81 User Rewards]"}),"\n",(0,r.jsx)(i.h3,{id:"2-arbitrage-opportunities",children:"2. Arbitrage Opportunities"}),"\n",(0,r.jsx)(i.p,{children:"Capture cross-DEX price differences:"}),"\n",(0,r.jsx)(i.mermaid,{value:"graph TB\n    Price1[DEX A: $100] --\x3e Comparison{Price Check}\n    Price2[DEX B: $102] --\x3e Comparison\n    Comparison --\x3e |Profitable| Execute[Execute Arbitrage]\n    Comparison --\x3e |Not Profitable| Wait[Wait for Better Opportunity]\n    Execute --\x3e Profit[2% Profit]"}),"\n",(0,r.jsx)(i.h3,{id:"3-just-in-time-liquidity",children:"3. Just-In-Time Liquidity"}),"\n",(0,r.jsx)(i.p,{children:"Provide liquidity exactly when needed:"}),"\n",(0,r.jsx)(i.mermaid,{value:"graph LR\n    Swap[Large Swap Detected] --\x3e Provide[Provide JIT Liquidity]\n    Provide --\x3e Capture[Capture Fees]\n    Capture --\x3e Remove[Remove Liquidity]\n    Remove --\x3e Profit[Net Profit]"}),"\n",(0,r.jsx)(i.h2,{id:"-gas-optimization",children:"\ud83d\udd27 Gas Optimization"}),"\n",(0,r.jsx)(i.h3,{id:"flash-loan-efficiency",children:"Flash Loan Efficiency"}),"\n",(0,r.jsx)(i.p,{children:"Reflex minimizes gas usage through:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Single Transaction"}),": All operations in one atomic transaction"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Optimal Routing"}),": Shortest path through DEX pools"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Batch Operations"}),": Multiple swaps in single call"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Callback Optimization"}),": Efficient callback handling"]}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"gas-usage-breakdown",children:"Gas Usage Breakdown"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{children:"Base Transaction:     21,000 gas\nFlash Loan Setup:     30,000 gas\nSwap Execution:       80,000 gas per hop\nProfit Distribution:  25,000 gas per recipient\nEvent Emission:        5,000 gas\n-----------------------------------------\nTypical Total:       ~160,000 gas\n"})}),"\n",(0,r.jsx)(i.h2,{id:"\ufe0f-security-architecture",children:"\ud83d\udee1\ufe0f Security Architecture"}),"\n",(0,r.jsx)(i.h3,{id:"multi-layer-security",children:"Multi-Layer Security"}),"\n",(0,r.jsx)(i.mermaid,{value:'graph TB\n    subgraph "Contract Level"\n        Reentrancy[\ud83d\udd12 Reentrancy Guards]\n        AccessControl[\ud83d\udc6e Access Control]\n        InputValidation[\u2705 Input Validation]\n    end\n\n    subgraph "Economic Level"\n        SlippageProtection[\ud83d\udcc9 Slippage Protection]\n        MEVProtection[\ud83d\udee1\ufe0f MEV Protection]\n        ProfitThresholds[\ud83d\udcb0 Profit Thresholds]\n    end\n\n    subgraph "Operational Level"\n        CircuitBreakers[\ud83d\udea8 Circuit Breakers]\n        EmergencyPause[\u23f8\ufe0f Emergency Pause]\n        AdminControls[\u2699\ufe0f Admin Controls]\n    end'}),"\n",(0,r.jsx)(i.h3,{id:"risk-mitigation",children:"Risk Mitigation"}),"\n",(0,r.jsxs)(i.ol,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Flash Loan Attacks"}),": Protected by reentrancy guards and callback validation"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Front-running"}),": Beneficially redirected to users through MEV capture"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Oracle Manipulation"}),": Multiple price sources and sanity checks"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Smart Contract Bugs"}),": Comprehensive testing and formal verification"]}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"-performance-characteristics",children:"\ud83d\udcca Performance Characteristics"}),"\n",(0,r.jsx)(i.h3,{id:"throughput",children:"Throughput"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Transaction Processing"}),": 1000+ TPS capability"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Event Monitoring"}),": Real-time block processing"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Route Calculation"}),": Sub-second quote generation"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Gas Efficiency"}),": 40-60% less gas than competing solutions"]}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"latency",children:"Latency"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Block Detection"}),": ",(0,r.jsx)(i.code,{children:"<100ms"})]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Opportunity Analysis"}),": ",(0,r.jsx)(i.code,{children:"<200ms"})]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Transaction Submission"}),": ",(0,r.jsx)(i.code,{children:"<300ms"})]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Total MEV Capture Time"}),": ",(0,r.jsx)(i.code,{children:"<600ms"})]}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"scalability",children:"Scalability"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Horizontal Scaling"}),": Multiple quoter instances"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Load Balancing"}),": Distributed across regions"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Caching"}),": Aggressive route and price caching"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Batch Processing"}),": Multiple opportunities per transaction"]}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"-multi-chain-architecture",children:"\ud83c\udf10 Multi-Chain Architecture"}),"\n",(0,r.jsx)(i.h3,{id:"chain-agnostic-design",children:"Chain-Agnostic Design"}),"\n",(0,r.jsx)(i.p,{children:"Reflex is designed to work across multiple blockchain networks:"}),"\n",(0,r.jsx)(i.mermaid,{value:'graph TB\n    Core[\ud83e\udde0 Core Protocol] --\x3e Ethereum[\ud83d\udd37 Ethereum]\n    Core --\x3e Polygon[\ud83d\udfe3 Polygon]\n    Core --\x3e Arbitrum[\ud83d\udd35 Arbitrum]\n    Core --\x3e Optimism[\ud83d\udd34 Optimism]\n    Core --\x3e BSC[\ud83d\udfe1 BSC]\n\n    subgraph "Cross-Chain MEV"\n        Bridge1[\ud83c\udf09 Bridge Arbitrage]\n        Bridge2[\ud83c\udf09 Cross-Chain Flash Loans]\n        Bridge3[\ud83c\udf09 Multi-Chain Routing]\n    end'}),"\n",(0,r.jsx)(i.h3,{id:"network-specific-optimizations",children:"Network-Specific Optimizations"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Ethereum"}),": Focus on high-value arbitrage"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"L2 Networks"}),": Low-cost, high-frequency strategies"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Side Chains"}),": Specialized DeFi protocol integration"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Cross-Chain"}),": Bridge arbitrage opportunities"]}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"-future-enhancements",children:"\ud83d\udd2e Future Enhancements"}),"\n",(0,r.jsx)(i.h3,{id:"planned-features",children:"Planned Features"}),"\n",(0,r.jsxs)(i.ol,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"AI-Powered Quoter"}),": Machine learning for opportunity prediction"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Cross-Chain MEV"}),": Arbitrage across different networks"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Privacy Features"}),": Zero-knowledge MEV strategies"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Governance Integration"}),": Community-driven parameter updates"]}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"research-areas",children:"Research Areas"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Intent-based Architecture"}),": User intent fulfillment optimization"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Collaborative MEV"}),": Multi-party MEV sharing protocols"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Sustainable MEV"}),": Long-term ecosystem health focus"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Regulatory Compliance"}),": Privacy-preserving compliance tools"]}),"\n"]}),"\n",(0,r.jsx)(i.hr,{}),"\n",(0,r.jsx)(i.p,{children:"This architecture enables Reflex to provide efficient, secure, and fair MEV capture that benefits all participants in the DeFi ecosystem. The modular design allows for easy integration with existing protocols while maintaining the flexibility to adapt to future innovations."}),"\n",(0,r.jsxs)(i.p,{children:["For implementation details, see our ",(0,r.jsx)(i.a,{href:"../integration/overview",children:"Integration Guide"})," and ",(0,r.jsx)(i.a,{href:"../api/smart-contracts",children:"API Reference"}),"."]})]})}function h(e={}){const{wrapper:i}={...(0,t.R)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);