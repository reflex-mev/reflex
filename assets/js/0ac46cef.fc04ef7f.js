"use strict";(self.webpackChunkreflex_docs=self.webpackChunkreflex_docs||[]).push([[4519],{6728:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>l,toc:()=>a});var t=r(4848),i=r(8453);const s={sidebar_position:2},o="Quick Start",l={id:"technical/getting-started/quick-start",title:"Quick Start",description:"Get up and running with Reflex Protocol in under 10 minutes. This guide will walk you through creating your first MEV capture integration.",source:"@site/docs/technical/getting-started/quick-start.md",sourceDirName:"technical/getting-started",slug:"/technical/getting-started/quick-start",permalink:"/reflex/technical/getting-started/quick-start",draft:!1,unlisted:!1,editUrl:"https://github.com/reflex-mev/reflex/tree/main/website/docs/technical/getting-started/quick-start.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2}},c={},a=[{value:"\ud83c\udfaf Overview",id:"-overview",level:2},{value:"\ud83d\udee0\ufe0f Prerequisites",id:"\ufe0f-prerequisites",level:2},{value:"Step 1: Initialize Your Project",id:"step-1-initialize-your-project",level:2},{value:"Step 2: Environment Setup",id:"step-2-environment-setup",level:2},{value:"Step 3: Create Your First Integration",id:"step-3-create-your-first-integration",level:2},{value:"Step 4: Configure Revenue Sharing",id:"step-4-configure-revenue-sharing",level:2},{value:"Step 5: Build and Run",id:"step-5-build-and-run",level:2},{value:"Step 6: Smart Contract Plugin (Optional)",id:"step-6-smart-contract-plugin-optional",level:2},{value:"\ud83c\udf89 Success!",id:"-success",level:2},{value:"\ud83d\udcca Expected Output",id:"-expected-output",level:2},{value:"\ud83d\ude80 Next Steps",id:"-next-steps",level:2},{value:"\ud83c\udd98 Troubleshooting",id:"-troubleshooting",level:2},{value:"Common Issues",id:"common-issues",level:3},{value:"Getting Help",id:"getting-help",level:3}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"quick-start",children:"Quick Start"})}),"\n",(0,t.jsx)(n.p,{children:"Get up and running with Reflex Protocol in under 10 minutes. This guide will walk you through creating your first MEV capture integration."}),"\n",(0,t.jsx)(n.h2,{id:"-overview",children:"\ud83c\udfaf Overview"}),"\n",(0,t.jsx)(n.p,{children:"In this quick start, you'll:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Set up a basic Reflex integration"}),"\n",(0,t.jsx)(n.li,{children:"Deploy a simple plugin contract"}),"\n",(0,t.jsx)(n.li,{children:"Execute your first backrun"}),"\n",(0,t.jsx)(n.li,{children:"Configure revenue sharing"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"\ufe0f-prerequisites",children:"\ud83d\udee0\ufe0f Prerequisites"}),"\n",(0,t.jsxs)(n.p,{children:["Make sure you've completed the ",(0,t.jsx)(n.a,{href:"installation",children:"Installation"})," guide and have:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"\u2705 Foundry installed"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 Node.js v18+"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 Reflex SDK installed"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 Test network access (we'll use Goerli)"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"step-1-initialize-your-project",children:"Step 1: Initialize Your Project"}),"\n",(0,t.jsx)(n.p,{children:"Create a new directory for your Reflex integration:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"mkdir my-reflex-integration\ncd my-reflex-integration\nnpm init -y\n"})}),"\n",(0,t.jsx)(n.p,{children:"Install the Reflex SDK:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"npm install @reflex/sdk ethers dotenv\nnpm install -D @types/node typescript ts-node\n"})}),"\n",(0,t.jsx)(n.p,{children:"Create a basic TypeScript configuration:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",metastring:'title="tsconfig.json"',children:'{\n  "compilerOptions": {\n    "target": "es2020",\n    "module": "commonjs",\n    "lib": ["es2020"],\n    "outDir": "./dist",\n    "rootDir": "./src",\n    "strict": true,\n    "esModuleInterop": true,\n    "skipLibCheck": true,\n    "forceConsistentCasingInFileNames": true,\n    "resolveJsonModule": true\n  },\n  "include": ["src/**/*"],\n  "exclude": ["node_modules", "dist"]\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"step-2-environment-setup",children:"Step 2: Environment Setup"}),"\n",(0,t.jsxs)(n.p,{children:["Create a ",(0,t.jsx)(n.code,{children:".env"})," file:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:'title=".env"',children:"# Network Configuration\nRPC_URL=https://goerli.infura.io/v3/YOUR_PROJECT_ID\nPRIVATE_KEY=your_private_key_here\n\n# Reflex Contract Addresses (Goerli Testnet)\nREFLEX_ROUTER=0x742d35Cc6634C0532925a3b8D598C4B4B3A3A3A3\nREFLEX_QUOTER=0x9E545E3C0baAB3E08CdfD552C960A1050f373042\n\n# Your Configuration\nMY_ADDRESS=0xYourAddressHere\nCONFIG_ID=0x0000000000000000000000000000000000000000000000000000000000000001\n"})}),"\n",(0,t.jsx)(n.h2,{id:"step-3-create-your-first-integration",children:"Step 3: Create Your First Integration"}),"\n",(0,t.jsx)(n.p,{children:"Create the main integration file:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",metastring:'title="src/index.ts"',children:'import { ethers } from "ethers";\nimport { ReflexSDK } from "@reflex/sdk";\nimport * as dotenv from "dotenv";\n\ndotenv.config();\n\nasync function main() {\n  // Initialize provider and signer\n  const provider = new ethers.JsonRpcProvider(process.env.RPC_URL);\n  const signer = new ethers.Wallet(process.env.PRIVATE_KEY!, provider);\n\n  // Initialize Reflex SDK\n  const reflex = new ReflexSDK(\n    provider,\n    process.env.REFLEX_ROUTER!,\n    process.env.REFLEX_QUOTER\n  );\n\n  console.log("\ud83d\ude80 Reflex SDK initialized");\n  console.log("\ud83d\udcca Router:", process.env.REFLEX_ROUTER);\n  console.log("\ud83d\udca1 Quoter:", process.env.REFLEX_QUOTER);\n\n  // Example: Trigger a backrun\n  await triggerExampleBackrun(reflex, signer);\n\n  // Example: Listen for events\n  await listenForBackrunEvents(reflex);\n}\n\nasync function triggerExampleBackrun(reflex: ReflexSDK, signer: ethers.Signer) {\n  try {\n    console.log("\\n\ud83c\udfaf Triggering example backrun...");\n\n    const params = {\n      triggerPoolId: "0x742d35Cc6634C0532925a3b8D598C4B4B3A3A3A3", // Example pool\n      swapAmountIn: ethers.parseEther("0.1"),\n      token0In: true,\n      recipient: process.env.MY_ADDRESS!,\n      configId: process.env.CONFIG_ID!,\n    };\n\n    // Estimate gas first\n    const gasEstimate = await reflex.estimateBackrunGas(params);\n    console.log("\u26fd Estimated gas:", gasEstimate.toString());\n\n    // Execute the backrun\n    const result = await reflex.triggerBackrun(signer, params, {\n      gasLimit: gasEstimate + BigInt(50000), // Add buffer\n    });\n\n    console.log("\u2705 Backrun executed!");\n    console.log("\ud83d\udcb0 Profit:", ethers.formatEther(result.profit), "ETH");\n    console.log("\ud83e\ude99 Profit token:", result.profitToken);\n    console.log("\ud83e\uddfe Transaction:", result.transaction.hash);\n  } catch (error) {\n    console.error("\u274c Backrun failed:", error);\n  }\n}\n\nasync function listenForBackrunEvents(reflex: ReflexSDK) {\n  console.log("\\n\ud83d\udc42 Listening for backrun events...");\n\n  reflex.onBackrunExecuted((event) => {\n    console.log("\ud83d\udd25 New backrun executed:");\n    console.log("  Pool:", event.triggerPoolId);\n    console.log("  Profit:", ethers.formatEther(event.profit));\n    console.log("  Token:", event.profitToken);\n    console.log("  Block:", event.blockNumber);\n  });\n\n  // Keep the process running\n  process.stdin.resume();\n}\n\nmain().catch(console.error);\n'})}),"\n",(0,t.jsx)(n.h2,{id:"step-4-configure-revenue-sharing",children:"Step 4: Configure Revenue Sharing"}),"\n",(0,t.jsx)(n.p,{children:"Create a revenue configuration script:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",metastring:'title="src/configure-revenue.ts"',children:'import { ethers } from "ethers";\nimport { ReflexSDK } from "@reflex/sdk";\nimport * as dotenv from "dotenv";\n\ndotenv.config();\n\nasync function configureRevenue() {\n  const provider = new ethers.JsonRpcProvider(process.env.RPC_URL);\n  const signer = new ethers.Wallet(process.env.PRIVATE_KEY!, provider);\n\n  const reflex = new ReflexSDK(provider, process.env.REFLEX_ROUTER!);\n\n  console.log("\u2699\ufe0f Configuring revenue sharing...");\n\n  const config = {\n    configId: process.env.CONFIG_ID!,\n    recipients: [\n      process.env.MY_ADDRESS!, // Your address: 50%\n      "0x742d35Cc6634C0532925a3b8D598C4B4B3A3A3A3", // Protocol: 30%\n      "0x9E545E3C0baAB3E08CdfD552C960A1050f373042", // Users: 20%\n    ],\n    shares: [50, 30, 20], // Must sum to 100\n  };\n\n  try {\n    const tx = await reflex.configureRevenue(signer, config);\n    await tx.wait();\n\n    console.log("\u2705 Revenue configuration set!");\n    console.log("\ud83e\uddfe Transaction:", tx.hash);\n\n    // Verify configuration\n    const storedConfig = await reflex.getRevenueConfig(config.configId);\n    console.log("\ud83d\udccb Stored configuration:", storedConfig);\n  } catch (error) {\n    console.error("\u274c Configuration failed:", error);\n  }\n}\n\nconfigureRevenue().catch(console.error);\n'})}),"\n",(0,t.jsx)(n.h2,{id:"step-5-build-and-run",children:"Step 5: Build and Run"}),"\n",(0,t.jsxs)(n.p,{children:["Add scripts to your ",(0,t.jsx)(n.code,{children:"package.json"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",metastring:'title="package.json" {6-9}',children:'{\n  "name": "my-reflex-integration",\n  "version": "1.0.0",\n  "main": "dist/index.js",\n  "scripts": {\n    "build": "tsc",\n    "start": "node dist/index.js",\n    "dev": "ts-node src/index.ts",\n    "configure": "ts-node src/configure-revenue.ts"\n  },\n  "dependencies": {\n    "@reflex/sdk": "^1.0.0",\n    "ethers": "^6.0.0",\n    "dotenv": "^16.0.0"\n  },\n  "devDependencies": {\n    "@types/node": "^20.0.0",\n    "typescript": "^5.0.0",\n    "ts-node": "^10.0.0"\n  }\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"Build and run your integration:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Configure revenue sharing first\nnpm run configure\n\n# Run the main integration\nnpm run dev\n"})}),"\n",(0,t.jsx)(n.h2,{id:"step-6-smart-contract-plugin-optional",children:"Step 6: Smart Contract Plugin (Optional)"}),"\n",(0,t.jsx)(n.p,{children:"For automatic MEV capture, create a simple plugin contract:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-solidity",metastring:'title="contracts/MyReflexPlugin.sol"',children:'// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\nimport "@reflex/contracts/ReflexAfterSwap.sol";\n\ncontract MyReflexPlugin is ReflexAfterSwap {\n    constructor(\n        address _reflexRouter,\n        address _pool\n    ) ReflexAfterSwap(_reflexRouter, _pool) {}\n\n    function afterSwap(\n        address sender,\n        uint256 amount0,\n        uint256 amount1,\n        bytes calldata data\n    ) external override onlyPool {\n        // Calculate swap amount for backrun\n        uint256 swapAmount = amount0 > 0 ? amount0 : amount1;\n        bool token0In = amount0 > 0;\n\n        // Only trigger for swaps above threshold\n        if (swapAmount >= 1e18) { // 1 token minimum\n            try reflexRouter.triggerBackrun(\n                bytes32(uint256(uint160(pool))), // Use pool as trigger ID\n                uint112(swapAmount / 10),        // Use 10% for backrun\n                token0In,\n                sender,                          // Give profits to original swapper\n                bytes32(0)                       // Use default config\n            ) returns (uint256 profit, address profitToken) {\n                // Backrun succeeded\n                emit BackrunTriggered(sender, profit, profitToken);\n            } catch {\n                // Backrun failed, continue normally\n            }\n        }\n    }\n\n    event BackrunTriggered(address indexed user, uint256 profit, address profitToken);\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"Deploy script:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",metastring:'title="scripts/deploy-plugin.ts"',children:'import { ethers } from "ethers";\nimport * as dotenv from "dotenv";\n\ndotenv.config();\n\nasync function deployPlugin() {\n  const provider = new ethers.JsonRpcProvider(process.env.RPC_URL);\n  const signer = new ethers.Wallet(process.env.PRIVATE_KEY!, provider);\n\n  const factory = new ethers.ContractFactory(\n    [], // ABI would go here\n    "0x", // Bytecode would go here\n    signer\n  );\n\n  const plugin = await factory.deploy(\n    process.env.REFLEX_ROUTER!,\n    "0x742d35Cc6634C0532925a3b8D598C4B4B3A3A3A3" // Target pool\n  );\n\n  await plugin.waitForDeployment();\n\n  console.log("\ud83d\ude80 Plugin deployed to:", await plugin.getAddress());\n}\n\ndeployPlugin().catch(console.error);\n'})}),"\n",(0,t.jsx)(n.h2,{id:"-success",children:"\ud83c\udf89 Success!"}),"\n",(0,t.jsx)(n.p,{children:"You've successfully:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"\u2705 Set up Reflex SDK"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 Configured revenue sharing"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 Executed your first backrun"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 Created event listeners"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 Built a plugin contract"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"-expected-output",children:"\ud83d\udcca Expected Output"}),"\n",(0,t.jsx)(n.p,{children:"When you run your integration, you should see:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"\ud83d\ude80 Reflex SDK initialized\n\ud83d\udcca Router: 0x742d35Cc6634C0532925a3b8D598C4B4B3A3A3A3\n\ud83d\udca1 Quoter: 0x9E545E3C0baAB3E08CdfD552C960A1050f373042\n\n\ud83c\udfaf Triggering example backrun...\n\u26fd Estimated gas: 150000\n\u2705 Backrun executed!\n\ud83d\udcb0 Profit: 0.0123 ETH\n\ud83e\ude99 Profit token: 0xA0b86a33E6a42E64d4C2a7f95F8b7E3b2C8d9E0f\n\ud83e\uddfe Transaction: 0xabc123...\n\n\ud83d\udc42 Listening for backrun events...\n\ud83d\udd25 New backrun executed:\n  Pool: 0x742d35Cc6634C0532925a3b8D598C4B4B3A3A3A3\n  Profit: 0.0089\n  Token: 0xA0b86a33E6a42E64d4C2a7f95F8b7E3b2C8d9E0f\n  Block: 8123456\n"})}),"\n",(0,t.jsx)(n.h2,{id:"-next-steps",children:"\ud83d\ude80 Next Steps"}),"\n",(0,t.jsx)(n.p,{children:"Now that you have a working integration:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"../examples/basic-backrun",children:"Explore Examples"})})," - See more advanced use cases"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"../integration/overview",children:"Integration Guide"})})," - Learn advanced integration patterns"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"../api/smart-contracts",children:"API Reference"})})," - Dive deep into the API"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"../architecture/overview",children:"Architecture"})})," - Understand the system design"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"-troubleshooting",children:"\ud83c\udd98 Troubleshooting"}),"\n",(0,t.jsx)(n.h3,{id:"common-issues",children:"Common Issues"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Gas estimation fails:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"Error: execution reverted: Insufficient profit\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Check that the pool has sufficient liquidity"}),"\n",(0,t.jsx)(n.li,{children:"Ensure the swap amount is reasonable"}),"\n",(0,t.jsx)(n.li,{children:"Verify the pool address is correct"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Transaction reverts:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"Error: execution reverted: Only admin can manage revenue configurations\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Make sure you're using the correct private key"}),"\n",(0,t.jsx)(n.li,{children:"Verify you're the owner of the configuration"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"No events received:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Check that you're connected to the correct network"}),"\n",(0,t.jsx)(n.li,{children:"Verify the contract addresses"}),"\n",(0,t.jsx)(n.li,{children:"Ensure your RPC provider supports event subscriptions"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"getting-help",children:"Getting Help"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\ud83d\udcac ",(0,t.jsx)(n.strong,{children:"Discord"}),": ",(0,t.jsx)(n.a,{href:"https://discord.gg/reflex",children:"Join our community"})]}),"\n",(0,t.jsxs)(n.li,{children:["\ud83d\udc1b ",(0,t.jsx)(n.strong,{children:"GitHub Issues"}),": ",(0,t.jsx)(n.a,{href:"https://github.com/reflex-mev/reflex/issues",children:"Report bugs"})]}),"\n",(0,t.jsxs)(n.li,{children:["\ud83d\udcda ",(0,t.jsx)(n.strong,{children:"Documentation"}),": Browse more guides in this documentation"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Congratulations!"})," You've completed the Reflex Quick Start. You're now ready to build sophisticated MEV capture strategies. \ud83c\udf89"]})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);