"use strict";(self.webpackChunkreflex_docs=self.webpackChunkreflex_docs||[]).push([[757],{2749:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>l});var t=n(4848),i=n(8453);const o={sidebar_position:1},s="Integration Overview",a={id:"integration/overview",title:"Integration Overview",description:"Learn how to integrate Reflex Protocol into your DeFi protocol to capture and distribute MEV fairly among your users.",source:"@site/docs/integration/overview.md",sourceDirName:"integration",slug:"/integration/overview",permalink:"/reflex/integration/overview",draft:!1,unlisted:!1,editUrl:"https://github.com/reflex-mev/reflex/tree/main/website/docs/integration/overview.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Architecture",permalink:"/reflex/architecture"},next:{title:"Revenue Configuration",permalink:"/reflex/integration/revenue-configuration"}},c={},l=[{value:"\ud83c\udfaf Integration Types",id:"-integration-types",level:2},{value:"1. Smart Contract Integration",id:"1-smart-contract-integration",level:2},{value:"Router Direct Access",id:"router-direct-access",level:3},{value:"Plugin-Based Access",id:"plugin-based-access",level:3},{value:"2. SDK Integration",id:"2-sdk-integration",level:2},{value:"TypeScript SDK",id:"typescript-sdk",level:3},{value:"\ud83c\udf9b\ufe0f Revenue Configuration",id:"\ufe0f-revenue-configuration",level:2}];function d(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",mermaid:"mermaid",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.header,{children:(0,t.jsx)(r.h1,{id:"integration-overview",children:"Integration Overview"})}),"\n",(0,t.jsx)(r.p,{children:"Learn how to integrate Reflex Protocol into your DeFi protocol to capture and distribute MEV fairly among your users."}),"\n",(0,t.jsx)(r.h2,{id:"-integration-types",children:"\ud83c\udfaf Integration Types"}),"\n",(0,t.jsx)(r.p,{children:"Reflex offers two main integration approaches depending on your use case and technical requirements:"}),"\n",(0,t.jsx)(r.h2,{id:"1-smart-contract-integration",children:"1. Smart Contract Integration"}),"\n",(0,t.jsx)(r.p,{children:"For protocols and DEXs that want to integrate MEV capture directly into their smart contracts."}),"\n",(0,t.jsx)(r.h3,{id:"router-direct-access",children:"Router Direct Access"}),"\n",(0,t.jsx)(r.p,{children:"Integrate directly with the Reflex Router for full control over MEV capture:"}),"\n",(0,t.jsx)(r.mermaid,{value:"graph LR\n    Protocol[\ud83c\udfdb\ufe0f Your Protocol] --\x3e Router[\ud83c\udfaf Reflex Router]\n    Router --\x3e |MEV Capture| Protocol"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"Best for:"})}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"\u2705 New protocol development"}),"\n",(0,t.jsx)(r.li,{children:"\u2705 Deep MEV integration"}),"\n",(0,t.jsx)(r.li,{children:"\u2705 Custom revenue models"}),"\n",(0,t.jsx)(r.li,{children:"\u2705 Protocol-level optimization"}),"\n"]}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"How it works:"}),"\nYour smart contract calls the Reflex Router directly to trigger backrun opportunities. This gives you complete control over when and how MEV is captured."]}),"\n",(0,t.jsx)(r.h3,{id:"plugin-based-access",children:"Plugin-Based Access"}),"\n",(0,t.jsx)(r.p,{children:"Deploy a lightweight plugin contract that automatically captures MEV from swaps:"}),"\n",(0,t.jsx)(r.mermaid,{value:"graph LR\n    User[\ud83d\udc64 User] --\x3e DEX[\ud83c\udfea Your DEX]\n    DEX --\x3e Plugin[\ud83d\udd0c Reflex Plugin]\n    Plugin --\x3e Router[\ud83c\udfaf Reflex Router]\n    Router --\x3e |Profits| User"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"Best for:"})}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"\u2705 Existing DEX protocols"}),"\n",(0,t.jsx)(r.li,{children:"\u2705 Minimal code changes required"}),"\n",(0,t.jsx)(r.li,{children:"\u2705 Automatic MEV capture"}),"\n",(0,t.jsx)(r.li,{children:"\u2705 Hook/callback architectures"}),"\n"]}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"How it works:"}),"\nA plugin contract integrates with your existing DEX using hooks or callbacks (like ",(0,t.jsx)(r.code,{children:"afterSwap"}),"). When users trade, the plugin automatically triggers MEV capture opportunities."]}),"\n",(0,t.jsx)(r.h2,{id:"2-sdk-integration",children:"2. SDK Integration"}),"\n",(0,t.jsx)(r.p,{children:"For clients, DApps, and custom applications that want to integrate MEV capture functionality."}),"\n",(0,t.jsx)(r.h3,{id:"typescript-sdk",children:"TypeScript SDK"}),"\n",(0,t.jsx)(r.p,{children:"Use the TypeScript SDK for custom MEV strategies and manual triggers:"}),"\n",(0,t.jsx)(r.mermaid,{value:"graph LR\n    DApp[\ud83d\udcf1 Your DApp] --\x3e SDK[\ud83d\udce6 Reflex SDK]\n    SDK --\x3e Router[\ud83c\udfaf Reflex Router]\n    Router --\x3e |Results| DApp"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"Best for:"})}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"\u2705 Frontend applications"}),"\n",(0,t.jsx)(r.li,{children:"\u2705 MEV bots and searchers"}),"\n",(0,t.jsx)(r.li,{children:"\u2705 Custom trading strategies"}),"\n",(0,t.jsx)(r.li,{children:"\u2705 Multi-chain operations"}),"\n",(0,t.jsx)(r.li,{children:"\u2705 Advanced profit optimization"}),"\n"]}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"How it works:"}),"\nYour application uses the Reflex SDK to monitor transactions, detect MEV opportunities, and execute backruns programmatically. Perfect for building sophisticated MEV strategies or integrating MEV capture into user-facing applications."]}),"\n",(0,t.jsx)(r.h2,{id:"\ufe0f-revenue-configuration",children:"\ud83c\udf9b\ufe0f Revenue Configuration"}),"\n",(0,t.jsx)(r.p,{children:"All integration types use Reflex's centralized revenue configuration system:"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"Default Configuration:"})}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"80% to Reflex Protocol"}),"\n",(0,t.jsx)(r.li,{children:"20% to users/traders"}),"\n"]}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"Custom Configuration:"}),"\nFor protocols requiring different profit distribution, contact the Reflex team to set up a custom revenue sharing structure. You'll receive a unique ",(0,t.jsx)(r.code,{children:"configId"})," to use in your integration."]}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.a,{href:"./revenue-configuration",children:"Learn more about Revenue Configuration \u2192"})}),"\n",(0,t.jsx)(r.hr,{}),"\n",(0,t.jsxs)(r.p,{children:["For more detailed implementation guidance, see our ",(0,t.jsx)(r.a,{href:"./smart-contract",children:"Smart Contract Integration"})," and ",(0,t.jsx)(r.a,{href:"./sdk-integration",children:"SDK Integration"})," guides, and check our ",(0,t.jsx)(r.a,{href:"../api/smart-contracts",children:"API Reference"}),"."]})]})}function u(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);