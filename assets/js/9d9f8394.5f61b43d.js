"use strict";(self.webpackChunkreflex_docs=self.webpackChunkreflex_docs||[]).push([[9013],{4343:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>t,metadata:()=>a,toc:()=>c});var r=s(4848),i=s(8453);const t={sidebar_position:3},o="Troubleshooting",a={id:"troubleshooting",title:"Troubleshooting",description:"Common issues and solutions when working with Reflex Protocol.",source:"@site/docs/troubleshooting.md",sourceDirName:".",slug:"/troubleshooting",permalink:"/reflex/troubleshooting",draft:!1,unlisted:!1,editUrl:"https://github.com/reflex-mev/reflex/tree/main/website/docs/troubleshooting.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3}},l={},c=[{value:"\ud83d\udea8 Common Issues",id:"-common-issues",level:2},{value:"Transaction Failures",id:"transaction-failures",level:3},{value:"&quot;Transaction Reverted&quot;",id:"transaction-reverted",level:4},{value:"&quot;Insufficient Funds&quot;",id:"insufficient-funds",level:4},{value:"Configuration Issues",id:"configuration-issues",level:3},{value:"&quot;Invalid Configuration ID&quot;",id:"invalid-configuration-id",level:4},{value:"Network Issues",id:"network-issues",level:3},{value:"&quot;Network Connection Failed&quot;",id:"network-connection-failed",level:4},{value:"\ud83d\udd27 Performance Issues",id:"-performance-issues",level:2},{value:"High Gas Costs",id:"high-gas-costs",level:3},{value:"Slow Transaction Processing",id:"slow-transaction-processing",level:3},{value:"\ud83d\udc1b Debugging",id:"-debugging",level:2},{value:"Enable Debug Logging",id:"enable-debug-logging",level:3},{value:"Transaction Tracing",id:"transaction-tracing",level:3},{value:"Memory Pool Analysis",id:"memory-pool-analysis",level:3},{value:"\ud83d\udcca Monitoring",id:"-monitoring",level:2},{value:"Health Checks",id:"health-checks",level:3},{value:"Performance Metrics",id:"performance-metrics",level:3},{value:"\ud83c\udd98 Getting Help",id:"-getting-help",level:2},{value:"Error Reporting",id:"error-reporting",level:3},{value:"Support Channels",id:"support-channels",level:3},{value:"Community Resources",id:"community-resources",level:3}];function d(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"troubleshooting",children:"Troubleshooting"})}),"\n",(0,r.jsx)(n.p,{children:"Common issues and solutions when working with Reflex Protocol."}),"\n",(0,r.jsx)(n.h2,{id:"-common-issues",children:"\ud83d\udea8 Common Issues"}),"\n",(0,r.jsx)(n.h3,{id:"transaction-failures",children:"Transaction Failures"}),"\n",(0,r.jsx)(n.h4,{id:"transaction-reverted",children:'"Transaction Reverted"'}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Symptoms:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Backrun transactions fail with revert error"}),"\n",(0,r.jsx)(n.li,{children:"No specific error message"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Possible Causes:"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Insufficient MEV profit"}),": The arbitrage opportunity disappeared before execution"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Slippage exceeded"}),": Price moved beyond tolerance"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Gas limit too low"}),": Transaction ran out of gas"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'// Increase slippage tolerance\nconst reflex = new ReflexSDK({\n  // ...config\n  options: {\n    slippageTolerance: 0.01, // Increase to 1%\n  },\n});\n\n// Increase gas limit\nawait reflex.executeBackrun({\n  // ...params\n  gasLimit: 500000, // Increase gas limit\n});\n\n// Check profit before execution\nconst quote = await reflex.getQuote(params);\nif (quote.expectedProfit < minProfit) {\n  console.log("Profit too low, skipping");\n  return;\n}\n'})}),"\n",(0,r.jsx)(n.h4,{id:"insufficient-funds",children:'"Insufficient Funds"'}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Symptoms:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:'Transactions fail with "insufficient funds for gas"'}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'// Check balance before transaction\nconst balance = await provider.getBalance(wallet.address);\nconst gasRequired = gasLimit * gasPrice;\n\nif (balance < gasRequired) {\n  console.error("Insufficient ETH for gas");\n  return;\n}\n\n// Or add automatic balance checking\nawait reflex.setOptions({\n  autoCheckBalance: true,\n  minimumBalance: ethers.parseEther("0.1"), // Keep 0.1 ETH minimum\n});\n'})}),"\n",(0,r.jsx)(n.h3,{id:"configuration-issues",children:"Configuration Issues"}),"\n",(0,r.jsx)(n.h4,{id:"invalid-configuration-id",children:'"Invalid Configuration ID"'}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Symptoms:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Revenue distribution fails"}),"\n",(0,r.jsx)(n.li,{children:"Configuration not found errors"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'// Verify configuration exists\nconst config = await reflex.getRevenueConfig(configId);\nif (!config) {\n  console.error("Configuration not found");\n  // Create new configuration\n  const newConfigId = await reflex.createRevenueConfig({\n    protocolShare: 5000,\n    userShare: 3000,\n    validatorShare: 2000,\n  });\n}\n\n// Always validate configuration before use\nfunction validateConfig(config) {\n  const total = config.protocolShare + config.userShare + config.validatorShare;\n  if (total !== 10000) {\n    throw new Error("Share percentages must sum to 100%");\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"network-issues",children:"Network Issues"}),"\n",(0,r.jsx)(n.h4,{id:"network-connection-failed",children:'"Network Connection Failed"'}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Symptoms:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"RPC calls timeout"}),"\n",(0,r.jsx)(n.li,{children:"Intermittent connection issues"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'// Use multiple RPC endpoints\nconst providers = [\n  new ethers.JsonRpcProvider("https://mainnet.infura.io/v3/KEY1"),\n  new ethers.JsonRpcProvider("https://eth-mainnet.alchemyapi.io/v2/KEY2"),\n  new ethers.JsonRpcProvider("https://cloudflare-eth.com"),\n];\n\n// Implement fallback logic\nasync function callWithFallback(method, ...args) {\n  for (const provider of providers) {\n    try {\n      return await provider[method](...args);\n    } catch (error) {\n      console.warn(`Provider failed: ${provider.connection.url}`);\n    }\n  }\n  throw new Error("All providers failed");\n}\n\n// Add retry logic\nconst reflex = new ReflexSDK({\n  provider,\n  options: {\n    retries: 3,\n    retryDelay: 1000, // 1 second\n  },\n});\n'})}),"\n",(0,r.jsx)(n.h2,{id:"-performance-issues",children:"\ud83d\udd27 Performance Issues"}),"\n",(0,r.jsx)(n.h3,{id:"high-gas-costs",children:"High Gas Costs"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Problem:"})," Transactions using too much gas or failing due to gas estimation."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Optimize Gas Settings:"})}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'// Use EIP-1559 for better gas management\nawait reflex.setGasStrategy({\n  type: "eip1559",\n  maxFeePerGas: ethers.parseUnits("30", "gwei"),\n  maxPriorityFeePerGas: ethers.parseUnits("2", "gwei"),\n});\n\n// Or use legacy gas pricing\nawait reflex.setGasStrategy({\n  type: "legacy",\n  gasPrice: ethers.parseUnits("25", "gwei"),\n});\n'})}),"\n",(0,r.jsxs)(n.ol,{start:"2",children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Gas Estimation:"})}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// Get accurate gas estimates\nconst gasEstimate = await reflex.estimateGas(params);\nconst safeGasLimit = (gasEstimate * 120n) / 100n; // Add 20% buffer\n\nawait reflex.executeBackrun({\n  ...params,\n  gasLimit: safeGasLimit,\n});\n"})}),"\n",(0,r.jsx)(n.h3,{id:"slow-transaction-processing",children:"Slow Transaction Processing"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Problem:"})," Transactions taking too long to confirm."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Increase Gas Price:"})}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// Monitor network congestion\nconst feeData = await provider.getFeeData();\nconst recommendedGasPrice = (feeData.gasPrice * 110n) / 100n; // 10% above current\n\nawait reflex.setGasStrategy({\n  gasPrice: recommendedGasPrice,\n});\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"2",children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Transaction Replacement:"})}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// Enable transaction replacement\nawait reflex.setOptions({\n  enableReplacement: true,\n  replacementMultiplier: 1.1, // 10% gas price increase\n});\n"})}),"\n",(0,r.jsx)(n.h2,{id:"-debugging",children:"\ud83d\udc1b Debugging"}),"\n",(0,r.jsx)(n.h3,{id:"enable-debug-logging",children:"Enable Debug Logging"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { ReflexSDK } from \"@reflex/sdk\";\n\nconst reflex = new ReflexSDK({\n  // ...config\n  options: {\n    debug: true,\n    logLevel: \"verbose\", // 'error', 'warn', 'info', 'debug', 'verbose'\n  },\n});\n\n// Custom logger\nreflex.setLogger({\n  error: (msg, data) => console.error(`[ERROR] ${msg}`, data),\n  warn: (msg, data) => console.warn(`[WARN] ${msg}`, data),\n  info: (msg, data) => console.info(`[INFO] ${msg}`, data),\n  debug: (msg, data) => console.debug(`[DEBUG] ${msg}`, data),\n});\n"})}),"\n",(0,r.jsx)(n.h3,{id:"transaction-tracing",children:"Transaction Tracing"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'// Enable transaction tracing\nconst result = await reflex.executeBackrun({\n  ...params,\n  trace: true, // Enable detailed tracing\n});\n\nif (!result.success) {\n  console.log("Trace data:", result.trace);\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"memory-pool-analysis",children:"Memory Pool Analysis"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'// Analyze failed opportunities\nreflex.on("OpportunityMissed", (event) => {\n  console.log("Missed opportunity:", {\n    reason: event.reason,\n    targetTx: event.targetTx,\n    estimatedProfit: ethers.formatEther(event.estimatedProfit),\n    competitorTx: event.competitorTx,\n  });\n});\n'})}),"\n",(0,r.jsx)(n.h2,{id:"-monitoring",children:"\ud83d\udcca Monitoring"}),"\n",(0,r.jsx)(n.h3,{id:"health-checks",children:"Health Checks"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'// Implement health monitoring\nasync function healthCheck() {\n  try {\n    // Check provider connection\n    const blockNumber = await provider.getBlockNumber();\n    console.log("Latest block:", blockNumber);\n\n    // Check contract status\n    const routerStatus = await reflex.getRouterStatus();\n    console.log("Router status:", routerStatus);\n\n    // Check balance\n    const balance = await provider.getBalance(wallet.address);\n    console.log("Wallet balance:", ethers.formatEther(balance));\n\n    return true;\n  } catch (error) {\n    console.error("Health check failed:", error);\n    return false;\n  }\n}\n\n// Run health checks periodically\nsetInterval(healthCheck, 60000); // Every minute\n'})}),"\n",(0,r.jsx)(n.h3,{id:"performance-metrics",children:"Performance Metrics"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'// Track performance metrics\nconst metrics = {\n  totalTransactions: 0,\n  successfulTransactions: 0,\n  totalGasUsed: 0n,\n  totalProfit: 0n,\n};\n\nreflex.on("TransactionComplete", (event) => {\n  metrics.totalTransactions++;\n  if (event.success) {\n    metrics.successfulTransactions++;\n    metrics.totalGasUsed += event.gasUsed;\n    metrics.totalProfit += event.profit;\n  }\n\n  // Calculate success rate\n  const successRate =\n    metrics.successfulTransactions / metrics.totalTransactions;\n  console.log("Success rate:", (successRate * 100).toFixed(2) + "%");\n});\n'})}),"\n",(0,r.jsx)(n.h2,{id:"-getting-help",children:"\ud83c\udd98 Getting Help"}),"\n",(0,r.jsx)(n.h3,{id:"error-reporting",children:"Error Reporting"}),"\n",(0,r.jsx)(n.p,{children:"When reporting issues, please include:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"SDK Version:"})}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npm list @reflex/sdk\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"2",children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Network Details:"})}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'console.log("Chain ID:", await provider.getNetwork().then((n) => n.chainId));\nconsole.log("Block number:", await provider.getBlockNumber());\n'})}),"\n",(0,r.jsxs)(n.ol,{start:"3",children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Transaction Details:"})}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'// For failed transactions\nconsole.log("Transaction hash:", txHash);\nconsole.log("Error message:", error.message);\nconsole.log("Error code:", error.code);\n'})}),"\n",(0,r.jsxs)(n.ol,{start:"4",children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Configuration:"})}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'// Sanitized configuration (remove private keys!)\nconsole.log("SDK config:", {\n  chainId: config.chainId,\n  options: config.options,\n  // DON\'T include private keys or sensitive data\n});\n'})}),"\n",(0,r.jsx)(n.h3,{id:"support-channels",children:"Support Channels"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"GitHub Issues"}),": ",(0,r.jsx)(n.a,{href:"https://github.com/reflex-mev/reflex/issues",children:"Report bugs"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Discord"}),": ",(0,r.jsx)(n.a,{href:"https://discord.gg/reflex",children:"Real-time support"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Email"}),": ",(0,r.jsx)(n.a,{href:"mailto:support@reflex-protocol.io",children:"support@reflex-protocol.io"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Documentation"}),": ",(0,r.jsx)(n.a,{href:"https://docs.reflex-protocol.io",children:"Full docs"})]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"community-resources",children:"Community Resources"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"FAQ"}),": Common questions and answers"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Examples"}),": Working code examples"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Best Practices"}),": Community-driven guidelines"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Tutorials"}),": Step-by-step guides"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Still having issues? Don't hesitate to reach out to our community for help!"})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);