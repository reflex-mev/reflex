"use strict";(self.webpackChunkreflex_docs=self.webpackChunkreflex_docs||[]).push([[3330],{8566:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>l});var t=r(4848),i=r(8453);const s={sidebar_position:2},o="SDK Reference",a={id:"technical/api/sdk-reference",title:"SDK Reference",description:"Complete reference for the Reflex TypeScript SDK, providing easy integration with Reflex Protocol smart contracts.",source:"@site/docs/technical/api/sdk-reference.md",sourceDirName:"technical/api",slug:"/technical/api/sdk-reference",permalink:"/reflex/technical/api/sdk-reference",draft:!1,unlisted:!1,editUrl:"https://github.com/reflex-mev/reflex/tree/main/website/docs/technical/api/sdk-reference.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Smart Contracts API",permalink:"/reflex/technical/api/smart-contracts"},next:{title:"Security Overview",permalink:"/reflex/technical/security/overview"}},c={},l=[{value:"\ud83d\udce6 Installation",id:"-installation",level:2},{value:"\ud83d\ude80 Quick Start",id:"-quick-start",level:2},{value:"\ud83d\udd27 Configuration",id:"-configuration",level:2},{value:"Constructor Options",id:"constructor-options",level:3},{value:"Example Configuration",id:"example-configuration",level:3},{value:"\ud83d\udccb Core Methods",id:"-core-methods",level:2},{value:"<code>startMonitoring()</code>",id:"startmonitoring",level:3},{value:"<code>executeBackrun()</code>",id:"executebackrun",level:3},{value:"<code>getQuote()</code>",id:"getquote",level:3},{value:"\ud83d\udcb0 Revenue Distribution",id:"-revenue-distribution",level:2},{value:"Create Configuration",id:"create-configuration",level:3},{value:"Update Configuration",id:"update-configuration",level:3},{value:"Query Configuration",id:"query-configuration",level:3},{value:"\ud83d\udcca Monitoring &amp; Events",id:"-monitoring--events",level:2},{value:"Listen to Events",id:"listen-to-events",level:3},{value:"Get Statistics",id:"get-statistics",level:3},{value:"\ud83d\udd0d Utilities",id:"-utilities",level:2},{value:"Address Validation",id:"address-validation",level:3},{value:"Token Information",id:"token-information",level:3},{value:"Format Amounts",id:"format-amounts",level:3},{value:"\u26a0\ufe0f Error Handling",id:"\ufe0f-error-handling",level:2},{value:"Common Error Codes",id:"common-error-codes",level:3},{value:"\ud83e\uddea Testing",id:"-testing",level:2},{value:"Mock Mode",id:"mock-mode",level:3},{value:"Test Helpers",id:"test-helpers",level:3},{value:"\ud83d\udcdd TypeScript Types",id:"-typescript-types",level:2},{value:"Core Types",id:"core-types",level:3},{value:"\ud83d\udd17 Chain Support",id:"-chain-support",level:2}];function d(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"sdk-reference",children:"SDK Reference"})}),"\n",(0,t.jsx)(n.p,{children:"Complete reference for the Reflex TypeScript SDK, providing easy integration with Reflex Protocol smart contracts."}),"\n",(0,t.jsx)(n.h2,{id:"-installation",children:"\ud83d\udce6 Installation"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"npm install @reflex/sdk\n# or\nyarn add @reflex/sdk\n"})}),"\n",(0,t.jsx)(n.h2,{id:"-quick-start",children:"\ud83d\ude80 Quick Start"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"import { ReflexSDK } from '@reflex/sdk';\nimport { ethers } from 'ethers';\n\n// Initialize provider\nconst provider = new ethers.JsonRpcProvider('https://mainnet.infura.io/v3/YOUR_KEY');\nconst signer = new ethers.Wallet('YOUR_PRIVATE_KEY', provider);\n\n// Create SDK instance\nconst reflex = new ReflexSDK({\n    provider,\n    signer,\n    chainId: 1, // Mainnet\n});\n\n// Start monitoring for MEV opportunities\nawait reflex.startMonitoring();\n"})}),"\n",(0,t.jsx)(n.h2,{id:"-configuration",children:"\ud83d\udd27 Configuration"}),"\n",(0,t.jsx)(n.h3,{id:"constructor-options",children:"Constructor Options"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"interface ReflexSDKConfig {\n    provider: ethers.Provider;\n    signer?: ethers.Signer;\n    chainId: number;\n    routerAddress?: string;\n    quoterAddress?: string;\n    options?: {\n        gasLimit?: number;\n        maxFeePerGas?: bigint;\n        maxPriorityFeePerGas?: bigint;\n        slippageTolerance?: number;\n    };\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"example-configuration",children:"Example Configuration"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"const config: ReflexSDKConfig = {\n    provider: new ethers.JsonRpcProvider('https://mainnet.infura.io/v3/YOUR_KEY'),\n    signer: wallet,\n    chainId: 1,\n    options: {\n        gasLimit: 300000,\n        slippageTolerance: 0.005, // 0.5%\n        maxFeePerGas: ethers.parseUnits('30', 'gwei'),\n        maxPriorityFeePerGas: ethers.parseUnits('2', 'gwei'),\n    }\n};\n"})}),"\n",(0,t.jsx)(n.h2,{id:"-core-methods",children:"\ud83d\udccb Core Methods"}),"\n",(0,t.jsx)(n.h3,{id:"startmonitoring",children:(0,t.jsx)(n.code,{children:"startMonitoring()"})}),"\n",(0,t.jsx)(n.p,{children:"Start monitoring the mempool for MEV opportunities."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"await reflex.startMonitoring({\n    protocols: ['uniswap-v2', 'uniswap-v3', 'sushiswap'],\n    minProfitThreshold: ethers.parseEther('0.01'), // 0.01 ETH\n    maxGasPrice: ethers.parseUnits('100', 'gwei'),\n});\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"protocols"}),": Array of supported DEX protocols"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"minProfitThreshold"}),": Minimum profit to execute backrun"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"maxGasPrice"}),": Maximum gas price for transactions"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"executebackrun",children:(0,t.jsx)(n.code,{children:"executeBackrun()"})}),"\n",(0,t.jsx)(n.p,{children:"Execute a backrun transaction for detected arbitrage."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"const result = await reflex.executeBackrun({\n    targetTx: '0x123...', // Target transaction hash\n    tokens: [tokenA, tokenB],\n    amounts: [amountIn, amountOut],\n    pools: [poolAddress],\n    configId: '0xabc...', // Revenue sharing config ID\n});\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"interface BackrunResult {\n    success: boolean;\n    txHash?: string;\n    profit?: bigint;\n    gasUsed?: bigint;\n    error?: string;\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"getquote",children:(0,t.jsx)(n.code,{children:"getQuote()"})}),"\n",(0,t.jsx)(n.p,{children:"Get a quote for potential MEV capture."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"const quote = await reflex.getQuote({\n    tokenIn: '0x6B175474E89094C44Da98b954EedeAC495271d0F', // DAI\n    tokenOut: '0xA0b86a33E6417fBB8C6f693CC7C6c2B6B0CF9Dc4', // USDC\n    amountIn: ethers.parseEther('1000'),\n    pools: ['0x123...', '0x456...'],\n});\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"interface Quote {\n    amountOut: bigint;\n    priceImpact: number;\n    route: string[];\n    gasEstimate: bigint;\n    expectedProfit: bigint;\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"-revenue-distribution",children:"\ud83d\udcb0 Revenue Distribution"}),"\n",(0,t.jsx)(n.h3,{id:"create-configuration",children:"Create Configuration"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"const configId = await reflex.createRevenueConfig({\n    protocolShare: 5000, // 50%\n    userShare: 3000,     // 30%\n    validatorShare: 2000, // 20%\n    minProfitThreshold: ethers.parseEther('0.01'),\n});\n"})}),"\n",(0,t.jsx)(n.h3,{id:"update-configuration",children:"Update Configuration"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"await reflex.updateRevenueConfig(configId, {\n    protocolShare: 6000, // 60%\n    userShare: 2500,     // 25%\n    validatorShare: 1500, // 15%\n});\n"})}),"\n",(0,t.jsx)(n.h3,{id:"query-configuration",children:"Query Configuration"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"const config = await reflex.getRevenueConfig(configId);\nconsole.log('Protocol Share:', config.protocolShare);\nconsole.log('User Share:', config.userShare);\nconsole.log('Validator Share:', config.validatorShare);\n"})}),"\n",(0,t.jsx)(n.h2,{id:"-monitoring--events",children:"\ud83d\udcca Monitoring & Events"}),"\n",(0,t.jsx)(n.h3,{id:"listen-to-events",children:"Listen to Events"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"// Listen for successful backruns\nreflex.on('BackrunExecuted', (event) => {\n    console.log('Backrun executed:', {\n        txHash: event.txHash,\n        profit: ethers.formatEther(event.profit),\n        tokens: event.tokens,\n    });\n});\n\n// Listen for revenue distributions\nreflex.on('RevenueDistributed', (event) => {\n    console.log('Revenue distributed:', {\n        configId: event.configId,\n        totalAmount: ethers.formatEther(event.totalAmount),\n        recipients: event.recipients,\n    });\n});\n\n// Listen for errors\nreflex.on('Error', (error) => {\n    console.error('SDK Error:', error.message);\n});\n"})}),"\n",(0,t.jsx)(n.h3,{id:"get-statistics",children:"Get Statistics"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"const stats = await reflex.getStatistics({\n    timeframe: '24h', // '1h', '24h', '7d', '30d'\n    configId: '0x123...', // Optional: filter by config\n});\n\nconsole.log('Statistics:', {\n    totalBackruns: stats.totalBackruns,\n    totalProfit: ethers.formatEther(stats.totalProfit),\n    averageProfit: ethers.formatEther(stats.averageProfit),\n    successRate: stats.successRate,\n});\n"})}),"\n",(0,t.jsx)(n.h2,{id:"-utilities",children:"\ud83d\udd0d Utilities"}),"\n",(0,t.jsx)(n.h3,{id:"address-validation",children:"Address Validation"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"import { isValidAddress, isContractAddress } from '@reflex/sdk/utils';\n\n// Check if address is valid\nif (isValidAddress(address)) {\n    console.log('Valid address');\n}\n\n// Check if address is a contract\nif (await isContractAddress(address, provider)) {\n    console.log('Contract address');\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"token-information",children:"Token Information"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"const tokenInfo = await reflex.getTokenInfo('0x6B175474E89094C44Da98b954EedeAC495271d0F');\nconsole.log('Token:', {\n    name: tokenInfo.name,\n    symbol: tokenInfo.symbol,\n    decimals: tokenInfo.decimals,\n    totalSupply: ethers.formatUnits(tokenInfo.totalSupply, tokenInfo.decimals),\n});\n"})}),"\n",(0,t.jsx)(n.h3,{id:"format-amounts",children:"Format Amounts"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"import { formatTokenAmount, parseTokenAmount } from '@reflex/sdk/utils';\n\n// Format for display\nconst formatted = formatTokenAmount(\n    ethers.parseUnits('1500.123456', 18), \n    18, \n    4 // decimal places\n); // \"1,500.1235\"\n\n// Parse user input\nconst parsed = parseTokenAmount('1,500.12', 18);\n// Returns: 1500120000000000000000n\n"})}),"\n",(0,t.jsx)(n.h2,{id:"\ufe0f-error-handling",children:"\u26a0\ufe0f Error Handling"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"try {\n    const result = await reflex.executeBackrun(params);\n    if (!result.success) {\n        console.error('Backrun failed:', result.error);\n    }\n} catch (error) {\n    if (error.code === 'INSUFFICIENT_FUNDS') {\n        console.error('Insufficient funds for transaction');\n    } else if (error.code === 'NETWORK_ERROR') {\n        console.error('Network connection issue');\n    } else {\n        console.error('Unexpected error:', error.message);\n    }\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"common-error-codes",children:"Common Error Codes"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Code"}),(0,t.jsx)(n.th,{children:"Description"}),(0,t.jsx)(n.th,{children:"Solution"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"INSUFFICIENT_FUNDS"})}),(0,t.jsx)(n.td,{children:"Not enough ETH for gas"}),(0,t.jsx)(n.td,{children:"Add more ETH to wallet"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"SLIPPAGE_EXCEEDED"})}),(0,t.jsx)(n.td,{children:"Price moved too much"}),(0,t.jsx)(n.td,{children:"Increase slippage tolerance"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"TRANSACTION_FAILED"})}),(0,t.jsx)(n.td,{children:"Transaction reverted"}),(0,t.jsx)(n.td,{children:"Check transaction parameters"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"NETWORK_ERROR"})}),(0,t.jsx)(n.td,{children:"RPC connection issue"}),(0,t.jsx)(n.td,{children:"Check network connection"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"INVALID_CONFIG"})}),(0,t.jsx)(n.td,{children:"Invalid configuration"}),(0,t.jsx)(n.td,{children:"Verify config parameters"})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"-testing",children:"\ud83e\uddea Testing"}),"\n",(0,t.jsx)(n.h3,{id:"mock-mode",children:"Mock Mode"}),"\n",(0,t.jsx)(n.p,{children:"For testing, use mock mode to simulate transactions:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"const reflex = new ReflexSDK({\n    provider,\n    chainId: 1,\n    options: {\n        mockMode: true, // Enable mock mode\n    }\n});\n\n// All transactions will be simulated\nconst result = await reflex.executeBackrun(params);\nconsole.log('Simulated result:', result);\n"})}),"\n",(0,t.jsx)(n.h3,{id:"test-helpers",children:"Test Helpers"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"import { createMockProvider, createTestWallet } from '@reflex/sdk/testing';\n\n// Create test environment\nconst provider = createMockProvider();\nconst wallet = createTestWallet();\nconst reflex = new ReflexSDK({ provider, signer: wallet, chainId: 31337 });\n"})}),"\n",(0,t.jsx)(n.h2,{id:"-typescript-types",children:"\ud83d\udcdd TypeScript Types"}),"\n",(0,t.jsx)(n.h3,{id:"core-types",children:"Core Types"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"// Export all types\nexport interface BackrunParams {\n    targetTx: string;\n    tokens: string[];\n    amounts: bigint[];\n    pools: string[];\n    configId: string;\n    deadline?: number;\n}\n\nexport interface RevenueConfig {\n    protocolShare: number;\n    userShare: number;\n    validatorShare: number;\n    minProfitThreshold: bigint;\n    isActive: boolean;\n}\n\nexport interface TokenInfo {\n    address: string;\n    name: string;\n    symbol: string;\n    decimals: number;\n    totalSupply: bigint;\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"-chain-support",children:"\ud83d\udd17 Chain Support"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Chain"}),(0,t.jsx)(n.th,{children:"Chain ID"}),(0,t.jsx)(n.th,{children:"Status"}),(0,t.jsx)(n.th,{children:"Router Address"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Ethereum Mainnet"}),(0,t.jsx)(n.td,{children:"1"}),(0,t.jsx)(n.td,{children:"\u2705 Live"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"0x742d35Cc..."})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Polygon"}),(0,t.jsx)(n.td,{children:"137"}),(0,t.jsx)(n.td,{children:"\u2705 Live"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"0x742d35Cc..."})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Arbitrum"}),(0,t.jsx)(n.td,{children:"42161"}),(0,t.jsx)(n.td,{children:"\u2705 Live"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"0x742d35Cc..."})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Optimism"}),(0,t.jsx)(n.td,{children:"10"}),(0,t.jsx)(n.td,{children:"\ud83d\udd04 Coming Soon"}),(0,t.jsx)(n.td,{children:"-"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Base"}),(0,t.jsx)(n.td,{children:"8453"}),(0,t.jsx)(n.td,{children:"\ud83d\udd04 Coming Soon"}),(0,t.jsx)(n.td,{children:"-"})]})]})]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsxs)(n.em,{children:["For more examples and advanced usage, check out our ",(0,t.jsx)(n.a,{href:"../examples/basic-backrun",children:"Examples"})," section."]})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);