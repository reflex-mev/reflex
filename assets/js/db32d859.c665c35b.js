"use strict";(self.webpackChunkreflex_docs=self.webpackChunkreflex_docs||[]).push([[884],{7679:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>u,frontMatter:()=>t,metadata:()=>l,toc:()=>c});var r=s(4848),i=s(8453);const t={sidebar_position:1},a="Security",l={id:"security",title:"Security",description:"Reflex prioritizes security through multiple defensive layers designed to ensure safe and reliable MEV operations. This document outlines our comprehensive security architecture, implementation details, and best practices for secure integration.",source:"@site/docs/security.md",sourceDirName:".",slug:"/security",permalink:"/reflex/security",draft:!1,unlisted:!1,editUrl:"https://github.com/reflex-mev/reflex/tree/main/website/docs/security.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"SDK Reference",permalink:"/reflex/api/sdk-reference"}},o={},c=[{value:"\ud83d\udee1\ufe0f Security Architecture",id:"\ufe0f-security-architecture",level:2},{value:"Core Security Principles",id:"core-security-principles",level:3},{value:"Multi-Layer Protection",id:"multi-layer-protection",level:3},{value:"\ud83d\udd12 Risk Mitigation &amp; Protection",id:"-risk-mitigation--protection",level:2},{value:"\ud83d\udee1\ufe0f Failsafe Architecture: Zero Impact on User Transactions",id:"\ufe0f-failsafe-architecture-zero-impact-on-user-transactions",level:3},{value:"Try-Catch Protection for All MEV Operations",id:"try-catch-protection-for-all-mev-operations",level:4},{value:"Comprehensive User Protection Guarantees",id:"comprehensive-user-protection-guarantees",level:4},{value:"Real-World Failure Scenarios",id:"real-world-failure-scenarios",level:4},{value:"1. Reentrancy Protection",id:"1-reentrancy-protection",level:3},{value:"2. Access Controls &amp; Authorization",id:"2-access-controls--authorization",level:3},{value:"3. Fund Safety Guarantees",id:"3-fund-safety-guarantees",level:3},{value:"4. Input Validation &amp; Bounds Checking",id:"4-input-validation--bounds-checking",level:3},{value:"\ud83d\udd0d Security Audits",id:"-security-audits",level:2},{value:"Professional Security Reviews",id:"professional-security-reviews",level:3},{value:"Internal Security Measures",id:"internal-security-measures",level:3},{value:"Bug Bounty Program",id:"bug-bounty-program",level:3},{value:"\ud83d\udea8 Security Best Practices",id:"-security-best-practices",level:2},{value:"For Protocol Integrators",id:"for-protocol-integrators",level:3},{value:"1. Implement Failsafe Integration Patterns",id:"1-implement-failsafe-integration-patterns",level:4},{value:"2. Validate Integration Parameters",id:"2-validate-integration-parameters",level:4},{value:"2. Implement Owner-Based Access Control",id:"2-implement-owner-based-access-control",level:4},{value:"3. Set Up Comprehensive Monitoring",id:"3-set-up-comprehensive-monitoring",level:4},{value:"4. Emergency Response Procedures",id:"4-emergency-response-procedures",level:4},{value:"For End Users &amp; DApp Developers",id:"for-end-users--dapp-developers",level:3},{value:"\ud83d\udee1\ufe0f User Fund Safety Guarantee",id:"\ufe0f-user-fund-safety-guarantee",level:4},{value:"1. Verify Contract Addresses",id:"1-verify-contract-addresses",level:4},{value:"2. Implement Slippage Protection",id:"2-implement-slippage-protection",level:4},{value:"3. Transaction Safety Checks",id:"3-transaction-safety-checks",level:4},{value:"4. Integration Testing",id:"4-integration-testing",level:4},{value:"\ud83c\udfd7\ufe0f Secure Development &amp; Operations",id:"\ufe0f-secure-development--operations",level:2},{value:"Development Security Standards",id:"development-security-standards",level:3},{value:"Continuous Security Monitoring",id:"continuous-security-monitoring",level:3},{value:"Operational Security",id:"operational-security",level:3},{value:"\ud83d\udccb Security Checklist",id:"-security-checklist",level:2},{value:"Pre-Integration Security Checklist",id:"pre-integration-security-checklist",level:3},{value:"Post-Integration Monitoring",id:"post-integration-monitoring",level:3},{value:"\ud83d\udea8 Emergency Response",id:"-emergency-response",level:2},{value:"Automated Circuit Breakers",id:"automated-circuit-breakers",level:3},{value:"Manual Emergency Procedures",id:"manual-emergency-procedures",level:3},{value:"Emergency Contacts &amp; Reporting",id:"emergency-contacts--reporting",level:3},{value:"\ud83d\udcde Responsible Disclosure",id:"-responsible-disclosure",level:2},{value:"Report Security Vulnerabilities",id:"report-security-vulnerabilities",level:3},{value:"Responsible Disclosure Process",id:"responsible-disclosure-process",level:3},{value:"Bug Bounty Rewards (Coming Soon)",id:"bug-bounty-rewards-coming-soon",level:3}];function d(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",input:"input",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"security",children:"Security"})}),"\n",(0,r.jsx)(n.p,{children:"Reflex prioritizes security through multiple defensive layers designed to ensure safe and reliable MEV operations. This document outlines our comprehensive security architecture, implementation details, and best practices for secure integration."}),"\n",(0,r.jsx)(n.h2,{id:"\ufe0f-security-architecture",children:"\ud83d\udee1\ufe0f Security Architecture"}),"\n",(0,r.jsx)(n.h3,{id:"core-security-principles",children:"Core Security Principles"}),"\n",(0,r.jsx)(n.p,{children:"Reflex implements a multi-layered security approach that protects all participants in the MEV ecosystem:"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Failsafe Architecture"})," - Reflex is designed with comprehensive failsafe mechanisms that guarantee zero impact on user transactions and funds. All MEV operations use try-catch patterns to ensure that any MEV failure cannot affect underlying user transactions."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Independent Operation"})," - Reflex operates completely independently from protocol and user swaps. The system has no access to user funds or protocol treasuries, only capturing MEV through legitimate arbitrage opportunities using flash loan-based swaps."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Zero Risk to Users"})," - Mathematical guarantees ensure user funds cannot be accessed, locked, or affected. Users never approve tokens to Reflex, and all MEV operations are completely isolated from user transaction flow."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Zero Trust Architecture"})," - No admin keys for core functionality, transparent and verifiable execution, permissionless participation, and censorship resistance."]}),"\n",(0,r.jsx)(n.h3,{id:"multi-layer-protection",children:"Multi-Layer Protection"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Contract-level"}),": Reentrancy guards, access controls, and comprehensive input validation"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Architecture-level"}),": Modular design with isolated components and fail-safe mechanisms"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Economic-level"}),": Incentive alignment and built-in profitability guarantees"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Operational-level"}),": Granular permissions and emergency procedures"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"-risk-mitigation--protection",children:"\ud83d\udd12 Risk Mitigation & Protection"}),"\n",(0,r.jsx)(n.h3,{id:"\ufe0f-failsafe-architecture-zero-impact-on-user-transactions",children:"\ud83d\udee1\ufe0f Failsafe Architecture: Zero Impact on User Transactions"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Critical Safety Guarantee"}),": Reflex is designed with comprehensive failsafe mechanisms that ensure ",(0,r.jsx)(n.strong,{children:"zero impact on user transactions and funds"})," under all circumstances."]}),"\n",(0,r.jsx)(n.h4,{id:"try-catch-protection-for-all-mev-operations",children:"Try-Catch Protection for All MEV Operations"}),"\n",(0,r.jsx)(n.p,{children:"All Reflex MEV operations use try-catch patterns to ensure that any failure in the MEV extraction process cannot affect the underlying user transaction:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-solidity",children:"// Example from ReflexAfterSwap integration\nfunction reflexAfterSwap(...) internal gracefulNonReentrant returns (uint256 profit, address profitToken) {\n    uint256 swapAmountIn = uint256(amount0Delta > 0 ? amount0Delta : amount1Delta);\n\n    // Failsafe: Use try-catch to prevent router failures from breaking the main swap\n    try IReflexRouter(reflexRouter).triggerBackrun(\n        triggerPoolId, uint112(swapAmountIn), zeroForOne, recipient, reflexConfigId\n    ) returns (uint256 backrunProfit, address backrunProfitToken) {\n        return (backrunProfit, backrunProfitToken);\n    } catch {\n        // Router call failed, but don't revert the main transaction\n        // This ensures the main swap can still complete successfully\n    }\n\n    return (0, address(0));\n}\n"})}),"\n",(0,r.jsx)(n.h4,{id:"comprehensive-user-protection-guarantees",children:"Comprehensive User Protection Guarantees"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Transaction Isolation"}),": MEV operations are completely isolated from user transactions:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Try-catch wrappers"})," ensure MEV failures don't propagate to user transactions"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Graceful degradation"})," - if MEV extraction fails, user transaction continues normally"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"No fund access"})," - Reflex has zero access to user funds or token approvals"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Independent execution"})," - MEV operations run independently of user swap logic"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Failure Handling"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Silent failures"})," - MEV extraction failures are silently handled without reverting user transactions"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Atomic operations"})," - Either MEV succeeds completely or fails with zero impact"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"No partial states"})," - No scenario where user transaction succeeds but leaves funds in limbo"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Guaranteed execution"})," - User transactions always complete regardless of MEV outcome"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Fund Safety"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"No token approvals required"})," - Users never approve tokens to Reflex contracts"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"No direct fund access"})," - Reflex operates only on public arbitrage opportunities"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Flash loan isolation"})," - All MEV operations use flash loans with automatic reversion"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Zero user fund risk"})," - Impossible for Reflex to access, lock, or lose user funds"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"real-world-failure-scenarios",children:"Real-World Failure Scenarios"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"What happens when MEV extraction fails:"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Router Failure"}),": Try-catch ensures user swap completes normally"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Gas Limit Exceeded"}),": MEV operation reverts, user transaction unaffected"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Insufficient Liquidity"}),": MEV attempt fails gracefully, user swap proceeds"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Oracle Issues"}),": MEV calculation fails, user transaction continues"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Smart Contract Bugs"}),": Any Reflex bug cannot impact user funds or transactions"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example Integration Protection:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-solidity",children:"// Protocol integration with guaranteed user protection\ncontract YourProtocol {\n    function performSwap(SwapParams memory params) external {\n        // 1. Execute user swap first (guaranteed to complete)\n        executeUserSwap(params);\n        \n        // 2. Attempt MEV extraction with full isolation\n        try reflexIntegration.extractMEV(params) {\n            // MEV succeeded - additional value captured\n        } catch {\n            // MEV failed - zero impact on user\n            // User swap already completed successfully\n        }\n    }\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"1-reentrancy-protection",children:"1. Reentrancy Protection"}),"\n",(0,r.jsxs)(n.p,{children:["All external calls are protected with a custom ",(0,r.jsx)(n.strong,{children:"GracefulReentrancyGuard"})," implementation:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-solidity",children:'import "./utils/GracefulReentrancyGuard.sol";\n\ncontract ReflexRouter is IReflexRouter, GracefulReentrancyGuard, ConfigurableRevenueDistributor {\n    function triggerBackrun(...) external override gracefulNonReentrant returns (uint256 profit, address profitToken) {\n        // Protected execution logic with graceful failure handling\n    }\n\n    function _triggerBackrunSafe(...) external returns (uint256 profit, address profitToken) {\n        require(msg.sender == address(this), "Only self-call allowed");\n        // Internal call with additional self-call protection\n    }\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Implementation Details:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Graceful Failure"}),": Unlike standard reentrancy guards that revert, our implementation gracefully exits with default return values when reentrancy is detected"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"No Transaction Reversion"}),": Reentrancy attempts don't cause the entire transaction to fail, maintaining user transaction integrity"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Self-Call Protection"}),": Internal functions include additional checks to ensure only authorized self-calls"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"2-access-controls--authorization",children:"2. Access Controls & Authorization"}),"\n",(0,r.jsx)(n.p,{children:"Simple but effective ownership-based access control system:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-solidity",children:'contract ReflexRouter {\n    address public owner;\n\n    constructor() {\n        owner = tx.origin; // Set deployer as owner\n    }\n\n    modifier isAdmin() {\n        require(msg.sender == owner);\n        _;\n    }\n\n    function setReflexQuoter(address _reflexQuoter) public isAdmin {\n        reflexQuoter = _reflexQuoter;\n    }\n\n    function _onlyFundsAdmin() internal view override {\n        require(msg.sender == owner, "Only admin can manage revenue configurations");\n    }\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Access Control Features:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Single Owner Model"}),": Simple ownership pattern with tx.origin as initial owner"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Admin Functions"}),": Only owner can update critical parameters like quoter address"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Revenue Management"}),": Owner controls all revenue distribution configurations"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"3-fund-safety-guarantees",children:"3. Fund Safety Guarantees"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Absolute User Fund Protection"})," - Reflex provides mathematical guarantees that user funds cannot be accessed, locked, or affected:"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Zero Fund Access Architecture"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"No token approvals"}),": Users never approve tokens to Reflex contracts"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"No direct fund access"}),": Reflex has zero access to user funds or protocol treasuries"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Flash loan isolation"}),": Only captures public arbitrage opportunities using flash loan-based swaps"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Independent operation"}),": Operates completely separately from user transaction flow"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Try-catch protection"}),": All MEV operations wrapped in try-catch to prevent user transaction impact"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Mathematical Fund Safety"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Impossible fund loss"}),": No code path exists for Reflex to access user balances"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"No approval requirement"}),": Users interact with protocols directly, never approving Reflex"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Atomic MEV operations"}),": Either MEV succeeds completely or fails with zero user impact"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Flash loan constraints"}),": All operations must be profitable or automatically revert"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Gas-only cost"}),": Users only pay additional gas for MEV extraction attempts (if any)"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Failure Isolation Guarantees"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Silent MEV failures"}),": MEV extraction failures never propagate to user transactions"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Transaction completion"}),": User swaps always complete regardless of MEV outcome"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"No partial states"}),": Impossible to have user transaction succeed with locked funds"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Automatic reversion"}),": Failed MEV operations automatically revert with zero side effects"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Real-World Protection Examples"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-solidity",children:"// User transaction flow - completely isolated from MEV\nfunction userSwap(SwapParams memory params) external {\n    // 1. User transaction executes normally\n    token.transferFrom(user, pool, params.amountIn);\n    uint256 amountOut = pool.swap(params.amountIn, params.recipient);\n    \n    // 2. MEV extraction attempt (completely isolated)\n    try reflexIntegration.extractMEV(params) {\n        // MEV succeeded - user gets their swap + protocol gets MEV value\n    } catch {\n        // MEV failed - user still got their swap normally\n        // Zero impact on user transaction or funds\n    }\n}\n\n// Reflex has no access to user funds at any point\n// No transferFrom, no approvals, no fund manipulation possible\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Atomic Operations"})," - All MEV operations are atomic:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Either fully successful with profit distribution, or completely reverted"}),"\n",(0,r.jsx)(n.li,{children:"No partial state changes that could leave funds locked"}),"\n",(0,r.jsx)(n.li,{children:"Built-in rollback mechanisms for failed operations"}),"\n",(0,r.jsx)(n.li,{children:"Try-catch isolation ensures user transactions complete regardless of MEV outcome"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"4-input-validation--bounds-checking",children:"4. Input Validation & Bounds Checking"}),"\n",(0,r.jsx)(n.p,{children:"Comprehensive validation focuses on critical parameters and financial safety:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-solidity",children:'// Revenue configuration validation (ConfigurableRevenueDistributor)\nfunction _setShares(bytes32 configId, address[] memory _recipients, uint256[] memory _sharesBps, uint256 _dustShareBps) internal {\n    require(_recipients.length == _sharesBps.length, "Recipients and shares length mismatch");\n    require(_recipients.length > 0, "No recipients provided");\n\n    uint256 totalShares = _dustShareBps;\n\n    // Validate recipients and calculate total shares\n    for (uint256 i = 0; i < _recipients.length; i++) {\n        address recipient = _recipients[i];\n        uint256 share = _sharesBps[i];\n        require(recipient != address(0), "Invalid recipient address");\n        require(share > 0, "Invalid share amount");\n        totalShares += share;\n    }\n\n    require(totalShares == TOTAL_BPS, "Total shares must equal 100%");\n}\n\n// Pool validation (Algebra plugins)\nrequire(pool != address(0), "Pool not exist");\nrequire(pluginByPool[pool] == address(0), "Already created");\n\n// Self-call protection (ReflexRouter)\nrequire(msg.sender == address(this), "Only self-call allowed");\n\n// ETH transfer validation\n(bool success,) = recipient.call{value: amount}("");\nrequire(success, "ETH transfer failed");\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Validation Features:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Share Distribution"}),": Ensures revenue shares total exactly 100% (10,000 basis points)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Address Validation"}),": Checks for non-zero addresses in critical functions"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Array Length Matching"}),": Validates matching lengths for parallel arrays"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Transfer Success"}),": Requires successful ETH transfers with explicit error messages"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Pool Uniqueness"}),": Prevents duplicate plugin creation for the same pool"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"-security-audits",children:"\ud83d\udd0d Security Audits"}),"\n",(0,r.jsx)(n.h3,{id:"professional-security-reviews",children:"Professional Security Reviews"}),"\n",(0,r.jsx)(n.p,{children:"We take security seriously and are working with a leading audit firm to ensure the highest level of security:"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Auditor"}),(0,r.jsx)(n.th,{children:"Scope"}),(0,r.jsx)(n.th,{children:"Status"}),(0,r.jsx)(n.th,{children:"Expected Completion"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"https://www.optimumsec.xyz/",children:"Optimum Security"})})}),(0,r.jsx)(n.td,{children:"Full Protocol"}),(0,r.jsx)(n.td,{children:"\ud83d\udd04 In Progress"}),(0,r.jsx)(n.td,{children:"Q3 2025"})]})})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Coming Soon"})," - Comprehensive audit reports will be published here once completed. Our security audits will cover:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Smart contract security analysis"}),"\n",(0,r.jsx)(n.li,{children:"Economic security and incentive alignment"}),"\n",(0,r.jsx)(n.li,{children:"Integration safety and best practices"}),"\n",(0,r.jsx)(n.li,{children:"Gas optimization and DoS resistance"}),"\n",(0,r.jsx)(n.li,{children:"Formal verification of critical functions"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"internal-security-measures",children:"Internal Security Measures"}),"\n",(0,r.jsx)(n.p,{children:"While external audits are in progress, we maintain rigorous internal security practices:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Comprehensive Testing"}),": 98%+ code coverage across all contracts"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Static Analysis"}),": Continuous monitoring with Slither, Mythril, and custom tools"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Peer Review"}),": Minimum 3 reviewer approval for all changes"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Formal Methods"}),": Critical functions verified with symbolic execution"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"bug-bounty-program",children:"Bug Bounty Program"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Coming Soon"})," - We will launch a comprehensive bug bounty program to reward security researchers who help us identify vulnerabilities and improve the protocol's security."]}),"\n",(0,r.jsx)(n.p,{children:"Our bug bounty program will cover:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Smart Contract Vulnerabilities"}),": Issues in core protocol contracts"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Integration Security"}),": Problems with protocol integration patterns"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Economic Attacks"}),": MEV manipulation or profit extraction vulnerabilities"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Documentation Issues"}),": Security-related documentation gaps or errors"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Program details including reward structures and submission guidelines will be published once our security audit is complete."}),"\n",(0,r.jsx)(n.h2,{id:"-security-best-practices",children:"\ud83d\udea8 Security Best Practices"}),"\n",(0,r.jsx)(n.h3,{id:"for-protocol-integrators",children:"For Protocol Integrators"}),"\n",(0,r.jsx)(n.h4,{id:"1-implement-failsafe-integration-patterns",children:"1. Implement Failsafe Integration Patterns"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Always use try-catch for MEV operations to guarantee user transaction protection:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-solidity",children:"contract SecureProtocolIntegration {\n    function executeSwapWithMEV(SwapParams memory params) external {\n        // Step 1: Execute user transaction first (guaranteed completion)\n        uint256 amountOut = _executeUserSwap(params);\n        \n        // Step 2: Attempt MEV extraction with full isolation\n        try reflexRouter.triggerBackrun(\n            params.poolId,\n            params.amountIn,\n            params.zeroForOne,\n            params.recipient,\n            configId\n        ) returns (uint256 profit, address profitToken) {\n            // MEV succeeded - emit event for tracking\n            emit MEVExtracted(profit, profitToken);\n        } catch Error(string memory reason) {\n            // MEV failed with reason - log but don't revert user transaction\n            emit MEVFailed(reason);\n        } catch (bytes memory lowLevelData) {\n            // MEV failed with low-level error - log but don't revert user transaction\n            emit MEVFailedLowLevel(lowLevelData);\n        }\n        \n        // User transaction completed regardless of MEV outcome\n        emit SwapCompleted(params.recipient, amountOut);\n    }\n    \n    function _executeUserSwap(SwapParams memory params) internal returns (uint256) {\n        // User swap logic - completely independent of MEV\n        // This must complete successfully regardless of MEV outcome\n        return pool.swap(params.amountIn, params.minAmountOut, params.recipient);\n    }\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Key Integration Principles:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Execute user logic first"}),": Ensure user transactions complete before MEV attempts"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Use comprehensive try-catch"}),": Handle both string errors and low-level failures"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Never revert on MEV failure"}),": User transactions must complete regardless of MEV outcome"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Log MEV failures"}),": Track MEV performance without affecting user experience"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Validate user protection"}),": Test that MEV failures don't impact user transactions"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"2-validate-integration-parameters",children:"2. Validate Integration Parameters"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-solidity",children:'// Always validate configuration before deployment - matches actual ConfigurableRevenueDistributor validation\nrequire(_recipients.length == _sharesBps.length, "Recipients and shares length mismatch");\nrequire(_recipients.length > 0, "No recipients provided");\n\nuint256 totalShares = _dustShareBps;\nfor (uint256 i = 0; i < _recipients.length; i++) {\n    require(_recipients[i] != address(0), "Invalid recipient address");\n    require(_sharesBps[i] > 0, "Invalid share amount");\n    totalShares += _sharesBps[i];\n}\nrequire(totalShares == 10000, "Total shares must equal 100% (10000 basis points)");\n\n// Verify admin access before deployment\nrequire(msg.sender == owner, "Only admin can manage revenue configurations");\n'})}),"\n",(0,r.jsx)(n.h4,{id:"2-implement-owner-based-access-control",children:"2. Implement Owner-Based Access Control"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-solidity",children:'// Use simple ownership pattern like ReflexRouter\ncontract YourProtocol {\n    address public owner;\n\n    constructor() {\n        owner = tx.origin; // Or msg.sender depending on deployment method\n    }\n\n    modifier onlyOwner() {\n        require(msg.sender == owner, "Only owner");\n        _;\n    }\n\n    function updateCriticalParameter(uint256 newValue) external onlyOwner {\n        // Update parameter\n    }\n}\n'})}),"\n",(0,r.jsx)(n.h4,{id:"3-set-up-comprehensive-monitoring",children:"3. Set Up Comprehensive Monitoring"}),"\n",(0,r.jsx)(n.p,{children:"Monitor these critical metrics based on actual contract events and behaviors:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'// Monitoring checklist aligned with actual implementation\nconst monitoringMetrics = {\n  profitDistribution: {\n    // Monitor SharesUpdated events from ConfigurableRevenueDistributor\n    event: "SharesUpdated(bytes32,address[],uint256[],uint256)",\n    expectedRange: [0.01, 10], // ETH\n    alertThreshold: 50, // ETH\n    timeWindow: "1h",\n  },\n  failureRate: {\n    // Monitor failed triggerBackrun calls (graceful failures)\n    maxFailureRate: 0.05, // 5%\n    consecutiveFailures: 3,\n    timeWindow: "15m",\n  },\n  adminActions: {\n    // Monitor isAdmin protected functions\n    functions: ["setReflexQuoter", "withdrawToken", "withdrawEth"],\n    alertOnAny: true,\n    requireApproval: true,\n  },\n  ownershipChanges: {\n    // Monitor any owner changes\n    alertOnAny: true,\n    immediateAlert: true,\n  },\n};\n'})}),"\n",(0,r.jsx)(n.h4,{id:"4-emergency-response-procedures",children:"4. Emergency Response Procedures"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-solidity",children:'// Implement graceful failure handling like ReflexRouter\ncontract EmergencyManagement {\n    address public owner;\n    bool public paused = false;\n\n    modifier whenNotPaused() {\n        if (paused) return; // Graceful exit instead of revert\n        _;\n    }\n\n    modifier onlyOwner() {\n        require(msg.sender == owner, "Only owner");\n        _;\n    }\n\n    function emergencyPause() external onlyOwner {\n        paused = true;\n        emit EmergencyPause(block.timestamp);\n    }\n\n    function emergencyUnpause() external onlyOwner {\n        paused = false;\n        emit EmergencyUnpause(block.timestamp);\n    }\n\n    // Emergency withdrawal functions like ReflexRouter\n    function withdrawToken(address token, uint256 amount, address _to) public onlyOwner {\n        IERC20(token).transfer(_to, amount);\n    }\n\n    function withdrawEth(uint256 amount, address payable _to) public onlyOwner {\n        _to.transfer(amount);\n    }\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"for-end-users--dapp-developers",children:"For End Users & DApp Developers"}),"\n",(0,r.jsx)(n.h4,{id:"\ufe0f-user-fund-safety-guarantee",children:"\ud83d\udee1\ufe0f User Fund Safety Guarantee"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Important"}),": Reflex provides absolute guarantees that your funds and transactions are completely safe:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Zero fund access"}),": Reflex never touches your tokens or requires approvals"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Transaction isolation"}),": MEV operations cannot affect your swaps or transactions"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Failsafe design"}),": All MEV attempts use try-catch to prevent any impact on your actions"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"No additional risk"}),": Using Reflex-enabled protocols carries zero additional risk to your funds"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Guaranteed execution"}),": Your transactions always complete successfully regardless of MEV outcome"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"You can use Reflex-enabled protocols with complete confidence"})," - there is no scenario where Reflex can harm your funds or transactions."]}),"\n",(0,r.jsx)(n.h4,{id:"1-verify-contract-addresses",children:"1. Verify Contract Addresses"}),"\n",(0,r.jsx)(n.p,{children:"Always verify you're interacting with official Reflex contracts by checking deployment records:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'// Example addresses from actual deployments (verify with latest deployment info)\nconst CONTRACT_ADDRESSES = {\n  // These are example test network addresses - always verify on official docs\n  testnet: {\n    reflexRouter: "0xA505476963CB2414FE54e3a42fAE9587704C50D7",\n    reflexQuoter: "0x1575f85195DD30e784196fa64c7d67c20BD18941",\n  },\n  // Mainnet addresses will be published upon mainnet deployment\n};\n\n// Always verify before interaction\nfunction verifyRouterAddress(chainId, routerAddress) {\n  const officialAddresses = CONTRACT_ADDRESSES[getNetworkName(chainId)];\n\n  if (!officialAddresses || routerAddress !== officialAddresses.reflexRouter) {\n    throw new Error(`Invalid router address for chain ${chainId}`);\n  }\n}\n\n// Verify contract is actually ReflexRouter\nasync function verifyContractInterface(address, provider) {\n  const contract = new ethers.Contract(\n    address,\n    ["function owner() view returns (address)"],\n    provider\n  );\n  try {\n    await contract.owner(); // Should not revert for ReflexRouter\n  } catch (error) {\n    throw new Error("Contract does not implement ReflexRouter interface");\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h4,{id:"2-implement-slippage-protection",children:"2. Implement Slippage Protection"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'// Always set reasonable slippage limits\nconst slippageTolerance = 0.005; // 0.5%\nconst minAmountOut = expectedAmount * (1 - slippageTolerance);\n\n// For high-value transactions, use tighter slippage\nconst highValueThreshold = ethers.utils.parseEther("10");\nconst tightSlippage = amount.gt(highValueThreshold) ? 0.003 : 0.005;\n'})}),"\n",(0,r.jsx)(n.h4,{id:"3-transaction-safety-checks",children:"3. Transaction Safety Checks"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'// Pre-transaction validation\nfunction validateTransaction(params) {\n  // Check recipient addresses\n  if (!ethers.utils.isAddress(params.recipient)) {\n    throw new Error("Invalid recipient address");\n  }\n\n  // Verify amounts\n  if (params.amountIn.lte(0) || params.minAmountOut.lte(0)) {\n    throw new Error("Invalid amounts");\n  }\n\n  // Check gas limits\n  if (params.gasLimit < 200000 || params.gasLimit > 2000000) {\n    throw new Error("Gas limit out of safe range");\n  }\n\n  // Verify deadline\n  const deadline = Math.floor(Date.now() / 1000) + 1200; // 20 minutes\n  if (params.deadline < deadline - 300) {\n    // Less than 5 minutes\n    throw new Error("Deadline too short");\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h4,{id:"4-integration-testing",children:"4. Integration Testing"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'// Test suite for Reflex integration based on actual contract behavior\ndescribe("Reflex Integration Security", () => {\n  it("should handle graceful reentrancy protection", async () => {\n    // Test that reentrancy attempts gracefully exit instead of reverting\n    const result = await reflexRouter.triggerBackrun(\n      poolId,\n      amount,\n      true,\n      recipient,\n      configId\n    );\n    expect(result).to.not.be.reverted; // Should gracefully handle reentrancy\n  });\n\n  it("should enforce owner-only access", async () => {\n    const nonOwner = accounts[1];\n    await expect(\n      reflexRouter.connect(nonOwner).setReflexQuoter(newQuoter)\n    ).to.be.revertedWith(""); // Simple require without message in actual code\n  });\n\n  it("should validate revenue configuration parameters", async () => {\n    const invalidShares = {\n      recipients: [addr1, addr2],\n      sharesBps: [5000, 6000], // Totals 11000 with dust\n      dustShareBps: 0,\n    };\n    await expect(\n      revenueDistributor.updateShares(\n        configId,\n        invalidShares.recipients,\n        invalidShares.sharesBps,\n        invalidShares.dustShareBps\n      )\n    ).to.be.revertedWith("Total shares must equal 100%");\n  });\n\n  it("should require valid recipient addresses", async () => {\n    const invalidConfig = {\n      recipients: [ethers.constants.AddressZero],\n      sharesBps: [10000],\n      dustShareBps: 0,\n    };\n    await expect(\n      revenueDistributor.updateShares(\n        configId,\n        invalidConfig.recipients,\n        invalidConfig.sharesBps,\n        invalidConfig.dustShareBps\n      )\n    ).to.be.revertedWith("Invalid recipient address");\n  });\n});\n'})}),"\n",(0,r.jsx)(n.h2,{id:"\ufe0f-secure-development--operations",children:"\ud83c\udfd7\ufe0f Secure Development & Operations"}),"\n",(0,r.jsx)(n.h3,{id:"development-security-standards",children:"Development Security Standards"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Code Quality Requirements:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Test Coverage"}),": 98%+ code coverage requirement across all contracts"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Static Analysis"}),": Continuous integration with Slither, Mythril, and custom security tools"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Peer Review"}),": Minimum 3 reviewer approval for all code changes"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Formal Verification"}),": Critical functions verified with symbolic execution tools"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Development Process:"})}),"\n",(0,r.jsx)(n.mermaid,{value:"graph LR\n    A[Code Development] --\x3e B[Static Analysis]\n    B --\x3e C[Unit Tests]\n    C --\x3e D[Integration Tests]\n    D --\x3e E[Peer Review]\n    E --\x3e F[Security Review]\n    F --\x3e G[Deployment]"}),"\n",(0,r.jsx)(n.h3,{id:"continuous-security-monitoring",children:"Continuous Security Monitoring"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Real-time Detection Systems:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Unusual MEV profit patterns or distribution anomalies"}),"\n",(0,r.jsx)(n.li,{children:"Failed transaction rate monitoring and alerting"}),"\n",(0,r.jsx)(n.li,{children:"Gas usage spike detection and circuit breakers"}),"\n",(0,r.jsx)(n.li,{children:"External oracle failure detection and fallback mechanisms"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Automated Response Systems:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Circuit breakers for anomaly protection"}),"\n",(0,r.jsx)(n.li,{children:"Rate limiting for excessive activity"}),"\n",(0,r.jsx)(n.li,{children:"Automatic pause mechanisms for critical issues"}),"\n",(0,r.jsx)(n.li,{children:"Emergency upgrade procedures"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"operational-security",children:"Operational Security"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Infrastructure Security:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Multi-signature wallets for administrative functions"}),"\n",(0,r.jsx)(n.li,{children:"Hardware security modules for key management"}),"\n",(0,r.jsx)(n.li,{children:"Redundant monitoring systems across multiple providers"}),"\n",(0,r.jsx)(n.li,{children:"24/7 incident response team availability"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Emergency Procedures:"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Detection"}),": Automated monitoring or community reports"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Assessment"}),": Security team evaluates severity within 30 minutes"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Containment"}),": Circuit breakers activated if needed"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Investigation"}),": Root cause analysis and impact assessment"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Resolution"}),": Fix deployment and comprehensive verification"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Communication"}),": Public disclosure and ecosystem updates"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"-security-checklist",children:"\ud83d\udccb Security Checklist"}),"\n",(0,r.jsx)(n.h3,{id:"pre-integration-security-checklist",children:"Pre-Integration Security Checklist"}),"\n",(0,r.jsx)(n.p,{children:"Before integrating Reflex, ensure your protocol meets these security requirements:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Contract Verification:"})}),"\n",(0,r.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Official Reflex contract addresses verified on block explorer"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Router and Quoter contract source code reviewed"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Integration parameters validated against documentation"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Test deployments completed on testnets"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Configuration Security:"})}),"\n",(0,r.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Revenue distribution shares sum to 100%"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Minimum profit thresholds set appropriately"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Gas limits within recommended ranges"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Slippage tolerances configured safely"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Monitoring & Alerting:"})}),"\n",(0,r.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Real-time monitoring systems deployed"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Alert thresholds configured for key metrics"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Emergency contact procedures documented"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Incident response playbook prepared"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Team Preparation:"})}),"\n",(0,r.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Development team trained on Reflex security practices"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Security documentation reviewed and understood"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Emergency procedures tested and validated"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Contact information for Reflex security team available"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Infrastructure Security:"})}),"\n",(0,r.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Multi-signature wallets configured for admin functions"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Backup systems and fallback procedures ready"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Access controls implemented and tested"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Upgrade mechanisms secured with timelocks"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"post-integration-monitoring",children:"Post-Integration Monitoring"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Continuous Security Validation:"})}),"\n",(0,r.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Daily monitoring of profit distribution patterns"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Weekly review of failed transaction patterns"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Monthly security configuration audits"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Quarterly integration security assessments"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"-emergency-response",children:"\ud83d\udea8 Emergency Response"}),"\n",(0,r.jsx)(n.h3,{id:"automated-circuit-breakers",children:"Automated Circuit Breakers"}),"\n",(0,r.jsx)(n.p,{children:"Reflex includes built-in protection mechanisms that automatically pause operations when:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Profit Anomalies"}),": Unusual profit patterns detected (>10x normal distribution)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Gas Cost Spikes"}),": Gas costs exceed 3x expected thresholds"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Failure Rate"}),": Failed transaction rate exceeds 20% over 15-minute window"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Oracle Issues"}),": External price oracle failures or significant deviations"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"manual-emergency-procedures",children:"Manual Emergency Procedures"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Emergency Pause Authority:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Protocol integrators can pause their specific integration"}),"\n",(0,r.jsx)(n.li,{children:"Reflex team can pause system-wide operations if needed"}),"\n",(0,r.jsx)(n.li,{children:"Multi-signature requirements for all emergency actions"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Response Timeline:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Immediate"})," (0-15 minutes): Automated systems respond to anomalies"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Short-term"})," (15-60 minutes): Security team assessment and manual intervention"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Medium-term"})," (1-24 hours): Root cause analysis and fix development"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Long-term"})," (24+ hours): Fix deployment, testing, and ecosystem communication"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"emergency-contacts--reporting",children:"Emergency Contacts & Reporting"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Primary Security Contacts:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Security Team"}),": ",(0,r.jsx)(n.a,{href:"mailto:security@reflexmev.io",children:"security@reflexmev.io"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Emergency Response"}),": ",(0,r.jsx)(n.a,{href:"mailto:emergency@reflexmev.io",children:"emergency@reflexmev.io"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Twitter/X"}),": ",(0,r.jsx)(n.a,{href:"https://x.com/ReflexMEV",children:"@ReflexMEV"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Response Time Commitments:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Critical Issues"}),": 15 minutes initial response"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"High Severity"}),": 1 hour initial response"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Medium/Low"}),": 24 hours initial response"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"-responsible-disclosure",children:"\ud83d\udcde Responsible Disclosure"}),"\n",(0,r.jsx)(n.h3,{id:"report-security-vulnerabilities",children:"Report Security Vulnerabilities"}),"\n",(0,r.jsx)(n.p,{children:"Found a potential security issue? We appreciate responsible disclosure and offer rewards for valid findings:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Secure Reporting Channels:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Email"}),": ",(0,r.jsx)(n.a,{href:"mailto:security@reflexmev.io",children:"security@reflexmev.io"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"PGP Key"}),": ",(0,r.jsx)(n.a,{href:"https://keyserver.ubuntu.com/pks/lookup?op=get&search=security@reflexmev.io",children:"Download Public Key"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Anonymous"}),": Use ",(0,r.jsx)(n.a,{href:"https://securedrop.reflexmev.io",children:"SecureDrop"})," for anonymous reporting"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"responsible-disclosure-process",children:"Responsible Disclosure Process"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Initial Report"}),": Submit detailed vulnerability information"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Acknowledgment"}),": We confirm receipt within 24 hours"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Investigation"}),": Our team investigates and assesses impact"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Coordination"}),": We work with you on disclosure timeline"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Resolution"}),": Fix is developed, tested, and deployed"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Publication"}),": Joint disclosure with credit to researcher"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"bug-bounty-rewards-coming-soon",children:"Bug Bounty Rewards (Coming Soon)"}),"\n",(0,r.jsx)(n.p,{children:"Once our audit process is complete, we will launch a comprehensive bug bounty program with competitive rewards based on vulnerability severity and impact."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Reward Categories:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Critical"}),": Complete system compromise, unlimited MEV extraction"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"High"}),": Significant fund risk, major MEV manipulation"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Medium"}),": Limited fund risk, MEV calculation errors"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Low"}),": Minor issues, documentation problems"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Program Features:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Competitive rewards commensurate with vulnerability impact"}),"\n",(0,r.jsx)(n.li,{children:"Recognition and credit for security researchers"}),"\n",(0,r.jsx)(n.li,{children:"Clear submission guidelines and evaluation criteria"}),"\n",(0,r.jsx)(n.li,{children:"Fast response times and transparent communication"}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Security is fundamental to Reflex's mission. We continuously evolve our security posture and welcome community collaboration in keeping the ecosystem safe."})})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);